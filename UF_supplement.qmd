+   print(14/60)
+   df$PDRx_rpp_awas <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_watch,"S","I")
+   print(15/60)
+   df$PDRx_rpp_asr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_singles,"R","NT")
+   print(16/60)
+   df$PDRx_rpp_acr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_combos,"R","NT")
+   print(17/60)
+   df$PDRx_rpp_aar <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_abs,"R","NT")
+   print(18/60)
+   df$PDRx_rpp_isr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,iv_singles,"R","NT")
+   print(19/60)
+   df$PDRx_rpp_icr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,iv_combos,"R","NT")
+   print(20/60)
+   df$PDRx_rpp_air <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_ivs,"R","NT")
+   print(21/60)
+   df$PDRx_rpp_osr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,oral_singles,"R","NT")
+   print(22/60)
+   df$PDRx_rpp_ocr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,oral_combos,"R","NT")
+   print(23/60)
+   df$PDRx_rpp_aor <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_orals,"R","NT")
+   print(24/60)
+   df$PDRx_rpp_acsr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,access_singles,"R","NT")
+   print(25/60)
+   df$PDRx_rpp_accr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,access_combos,"R","NT")
+   print(26/60)
+   df$PDRx_rpp_aacr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_access,"R","NT")
+   print(27/60)
+   df$PDRx_rpp_wasr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,watch_singles,"R","NT")
+   print(28/60)
+   df$PDRx_rpp_wacr <- df %>% number_results_per_panel(PDRx_1,PDRx_6,watch_combos,"R","NT")
+   print(29/60)
+   df$PDRx_rpp_awar <- df %>% number_results_per_panel(PDRx_1,PDRx_6,all_watch,"R","NT")
+   print(30/60)
+   
+   ###Standard results per panel
+   df$STANDARD_AST_rpp_ass <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_singles,"S","I")
+   print(31/60)
+   df$STANDARD_AST_rpp_acs <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_combos,"S","I")
+   print(32/60)
+   df$STANDARD_AST_rpp_aas <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_abs,"S","I")
+   print(33/60)
+   df$STANDARD_AST_rpp_iss <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,iv_singles,"S","I")
+   print(34/60)
+   df$STANDARD_AST_rpp_ics <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,iv_combos,"S","I")
+   print(35/60)
+   df$STANDARD_AST_rpp_ais <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_ivs,"S","I")
+   print(36/60)
+   df$STANDARD_AST_rpp_oss <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,oral_singles,"S","I")
+   print(37/60)
+   df$STANDARD_AST_rpp_ocs <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,oral_combos,"S","I")
+   print(38/60)
+   df$STANDARD_AST_rpp_aos <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_orals,"S","I")
+   print(39/60)
+   df$STANDARD_AST_rpp_acss <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,access_singles,"S","I")
+   print(40/60)
+   df$STANDARD_AST_rpp_accs <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,access_combos,"S","I")
+   print(41/60)
+   df$STANDARD_AST_rpp_aacs <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_access,"S","I")
+   print(42/60)
+   df$STANDARD_AST_rpp_wass <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,watch_singles,"S","I")
+   print(43/60)
+   df$STANDARD_AST_rpp_wacs <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,watch_combos,"S","I")
+   print(44/60)
+   df$STANDARD_AST_rpp_awas <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_watch,"S","I")
+   print(45/60)
+   df$STANDARD_AST_rpp_asr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_singles,"R","NT")
+   print(46/60)
+   df$STANDARD_AST_rpp_acr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_combos,"R","NT")
+   print(47/60)
+   df$STANDARD_AST_rpp_aar <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_abs,"R","NT")
+   print(48/60)
+   df$STANDARD_AST_rpp_isr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,iv_singles,"R","NT")
+   print(49/60)
+   df$STANDARD_AST_rpp_icr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,iv_combos,"R","NT")
+   print(50/60)
+   df$STANDARD_AST_rpp_air <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_ivs,"R","NT")
+   print(51/60)
+   df$STANDARD_AST_rpp_osr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,oral_singles,"R","NT")
+   print(52/60)
+   df$STANDARD_AST_rpp_ocr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,oral_combos,"R","NT")
+   print(53/60)
+   df$STANDARD_AST_rpp_aor <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_orals,"R","NT")
+   print(54/60)
+   df$STANDARD_AST_rpp_acsr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,access_singles,"R","NT")
+   print(55/60)
+   df$STANDARD_AST_rpp_accr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,access_combos,"R","NT")
+   print(56/60)
+   df$STANDARD_AST_rpp_aacr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_access,"R","NT")
+   print(57/60)
+   df$STANDARD_AST_rpp_wasr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,watch_singles,"R","NT")
+   print(58/60)
+   df$STANDARD_AST_rpp_wacr <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,watch_combos,"R","NT")
+   print(59/60)
+   df$STANDARD_AST_rpp_awar <- df %>% number_results_per_panel(STANDARD_AST_1,STANDARD_AST_6,all_watch,"R","NT")
+   print(60/60)
+   
+   df
+   
+ }
> 
> ###Counting the number of S or I results per antimicrobial (total)
> number_ab_results <- function(df,start_col,end_col,which_abs,result_1,result_2) {
+   
+   all_si <- c()
+   start_col <- enquo(start_col)
+   end_col <- enquo(end_col)
+   
+   for(i in 1:nrow(df)) {
+     
+     all_s <- df %>%
+       select(all_of(intersect(df %>% select(!!start_col:!!end_col) %>%dplyr::slice(i) %>% unlist(),all_abs))) %>% 
+       dplyr::slice(i) %>% t() %>% data.frame() %>% filter(. ==result_1) %>% rownames()
+     
+     all_i <- df %>%
+       select(all_of(intersect(df %>% select(!!start_col:!!end_col) %>%dplyr::slice(i) %>% unlist(),all_abs))) %>% 
+       dplyr::slice(i) %>% t() %>% data.frame() %>% filter(. ==result_2) %>% rownames()
+     
+     ac_si <- all_s %>% append(all_i)
+     
+     all_si <- all_si %>% append(ac_si)
+     
+   }
+   
+   all_si %>% table() %>% stack()
+   
+ }
> 
> ###Assembling dot plot dataframe
> create_df <- function(df, col_name, aware_result, panel,type,result) {
+   result <- df %>%
+     select({{ col_name }}) %>%
+     cbind(AWaRe_results = aware_result, Panel = panel,Agents=type,Result=result) %>%
+     as.data.frame()
+   colnames(result) <- c("n", "AWaRe_results", "Panel","Agents","Result")
+   return(result)
+ }
> assemble_dotplot_df <- function(df) {
+   
+   PDRx_rpp_ass <- df %>% create_df(PDRx_rpp_ass,"PDRx\nsingle S","PDRx","Single","S")
+   PDRx_rpp_acs <- df %>% create_df(PDRx_rpp_acs,"PDRx\ncombo S","PDRx","Combo","S")
+   PDRx_rpp_aas <- df %>% create_df(PDRx_rpp_aas,"PDRx\nall S","PDRx","All","S")
+   PDRx_rpp_iss <- df %>% create_df(PDRx_rpp_iss,"PDRx\nsingle IV S","PDRx","Single IV","S")
+   PDRx_rpp_ics <- df %>% create_df(PDRx_rpp_ics,"PDRx\ncombo IV S","PDRx","Combo IV","S")
+   PDRx_rpp_ais <- df %>% create_df(PDRx_rpp_ais,"PDRx\nall IV S","PDRx","All IV","S")
+   PDRx_rpp_oss <- df %>% create_df(PDRx_rpp_oss,"PDRx\nsingle oral S","PDRx","Single Oral","S")
+   PDRx_rpp_ocs <- df %>% create_df(PDRx_rpp_ocs,"PDRx\ncombo oral S","PDRx","Combo Oral","S")
+   PDRx_rpp_aos <- df %>% create_df(PDRx_rpp_aos,"PDRx\nall oral S","PDRx","All Oral","S")
+   PDRx_rpp_acss <- df %>% create_df(PDRx_rpp_acss,"PDRx\nsingle Access S","PDRx","Single Access","S")
+   PDRx_rpp_accs <- df %>% create_df(PDRx_rpp_accs,"PDRx\ncombo Access S","PDRx","Combo Access","S")
+   PDRx_rpp_aacs <- df %>% create_df(PDRx_rpp_aacs,"PDRx\nall Access S","PDRx","All Access","S")
+   PDRx_rpp_wass <- df %>% create_df(PDRx_rpp_wass,"PDRx\nsingle Watch S","PDRx","Single Watch","S")
+   PDRx_rpp_wacs <- df %>% create_df(PDRx_rpp_wacs,"PDRx\ncombo watch S","PDRx","Combo Watch","S")
+   PDRx_rpp_awas <- df %>% create_df(PDRx_rpp_awas,"PDRx\nall watch S","PDRx","All Watch","S")
+   PDRx_rpp_asr <- df %>% create_df(PDRx_rpp_asr,"PDRx\nsingle R","PDRx","Single","R")
+   PDRx_rpp_acr <- df %>% create_df(PDRx_rpp_acr,"PDRx\ncombo R","PDRx","Combo","R")
+   PDRx_rpp_aar <- df %>% create_df(PDRx_rpp_aar,"PDRx\nall R","PDRx","All","R")
+   PDRx_rpp_isr <- df %>% create_df(PDRx_rpp_isr,"PDRx\nsingle IV R","PDRx","Single IV","R")
+   PDRx_rpp_icr <- df %>% create_df(PDRx_rpp_icr,"PDRx\ncombo IV R","PDRx","Combo IV","R")
+   PDRx_rpp_air <- df %>% create_df(PDRx_rpp_air,"PDRx\nall IV R","PDRx","All IV","R")
+   PDRx_rpp_osr <- df %>% create_df(PDRx_rpp_osr,"PDRx\nsingle oral R","PDRx","Single Oral","R")
+   PDRx_rpp_ocr <- df %>% create_df(PDRx_rpp_ocr,"PDRx\ncombo oral R","PDRx","Combo Oral","R")
+   PDRx_rpp_aor <- df %>% create_df(PDRx_rpp_aor,"PDRx\nall oral R","PDRx","All Oral","R")
+   PDRx_rpp_acsr <- df %>% create_df(PDRx_rpp_acsr,"PDRx\nsingle Access R","PDRx","Single Access","R")
+   PDRx_rpp_accr <- df %>% create_df(PDRx_rpp_accr,"PDRx\ncombo Access R","PDRx","Combo Access","R")
+   PDRx_rpp_aacr <- df %>% create_df(PDRx_rpp_aacr,"PDRx\nall Access R","PDRx","All Access","R")
+   PDRx_rpp_wasr <- df %>% create_df(PDRx_rpp_wasr,"PDRx\nsingle Watch R","PDRx","Single Watch","R")
+   PDRx_rpp_wacr <- df %>% create_df(PDRx_rpp_wacr,"PDRx\ncombo Watch R","PDRx","Combo Watch","R")
+   PDRx_rpp_awar <- df %>% create_df(PDRx_rpp_awar,"PDRx\nall Watch R","PDRx","All Watch","R")
+   STANDARD_AST_rpp_ass <- df %>% create_df(STANDARD_AST_rpp_ass,"Standard\nsingle S","Standard","Single","S")
+   STANDARD_AST_rpp_acs <- df %>% create_df(STANDARD_AST_rpp_acs,"Standard\ncombo S","Standard","Combo","S")
+   STANDARD_AST_rpp_aas <- df %>% create_df(STANDARD_AST_rpp_aas,"Standard\nall S","Standard","All","S")
+   STANDARD_AST_rpp_iss <- df %>% create_df(STANDARD_AST_rpp_iss,"Standard\nsingle IV S","Standard","Single IV","S")
+   STANDARD_AST_rpp_ics <- df %>% create_df(STANDARD_AST_rpp_ics,"Standard\ncombo IV S","Standard","Combo IV","S")
+   STANDARD_AST_rpp_ais <- df %>% create_df(STANDARD_AST_rpp_ais,"Standard\nall IV S","Standard","All IV","S")
+   STANDARD_AST_rpp_oss <- df %>% create_df(STANDARD_AST_rpp_oss,"Standard\nsingle oral S","Standard","Single Oral","S")
+   STANDARD_AST_rpp_ocs <- df %>% create_df(STANDARD_AST_rpp_ocs,"Standard\ncombo oral S","Standard","Combo Oral","S")
+   STANDARD_AST_rpp_aos <- df %>% create_df(STANDARD_AST_rpp_aos,"Standard\nall oral S","Standard","All Oral","S")
+   STANDARD_AST_rpp_acss <- df %>% create_df(STANDARD_AST_rpp_acss,"Standard\nsingle Access S","Standard","Single Access","S")
+   STANDARD_AST_rpp_accs <- df %>% create_df(STANDARD_AST_rpp_accs,"Standard\ncombo Access S","Standard","Combo Access","S")
+   STANDARD_AST_rpp_aacs <- df %>% create_df(STANDARD_AST_rpp_aacs,"Standard\nall Access S","Standard","All Access","S")
+   STANDARD_AST_rpp_wass <- df %>% create_df(STANDARD_AST_rpp_wass,"Standard\nsingle Watch S","Standard","Single Watch","S")
+   STANDARD_AST_rpp_wacs <- df %>% create_df(STANDARD_AST_rpp_wacs,"Standard\ncombo Watch S","Standard","Combo Watch","S")
+   STANDARD_AST_rpp_awas <- df %>% create_df(STANDARD_AST_rpp_awas,"Standard\nall Watch S","Standard","All Watch","S")
+   STANDARD_AST_rpp_asr <- df %>% create_df(STANDARD_AST_rpp_asr,"Standard\nsingle R","Standard","Single","R")
+   STANDARD_AST_rpp_acr <- df %>% create_df(STANDARD_AST_rpp_acr,"Standard\ncombo R","Standard","Combo","R")
+   STANDARD_AST_rpp_aar <- df %>% create_df(STANDARD_AST_rpp_aar,"Standard\nall R","Standard","All","R")
+   STANDARD_AST_rpp_isr <- df %>% create_df(STANDARD_AST_rpp_isr,"Standard\nsingle IV R","Standard","Single IV","R")
+   STANDARD_AST_rpp_icr <- df %>% create_df(STANDARD_AST_rpp_icr,"Standard\ncombo IV R","Standard","Combo IV","R")
+   STANDARD_AST_rpp_air <- df %>% create_df(STANDARD_AST_rpp_air,"Standard\nall IV R","Standard","All IV","R")
+   STANDARD_AST_rpp_osr <- df %>% create_df(STANDARD_AST_rpp_osr,"Standard\nsingle oral R","Standard","Single Oral","R")
+   STANDARD_AST_rpp_ocr <- df %>% create_df(STANDARD_AST_rpp_ocr,"Standard\ncombo oral R","Standard","Combo Oral","R")
+   STANDARD_AST_rpp_aor <- df %>% create_df(STANDARD_AST_rpp_aor,"Standard\nall oral R","Standard","All Oral","R")
+   STANDARD_AST_rpp_acsr <- df %>% create_df(STANDARD_AST_rpp_acsr,"Standard\nsingle Access R","Standard","Single Access","R")
+   STANDARD_AST_rpp_accr <- df %>% create_df(STANDARD_AST_rpp_accr,"Standard\ncombo Access R","Standard","Combo Access","R")
+   STANDARD_AST_rpp_aacr <- df %>% create_df(STANDARD_AST_rpp_aacr,"Standard\nall Access R","Standard","All Access","R")
+   STANDARD_AST_rpp_wasr <- df %>% create_df(STANDARD_AST_rpp_wasr,"Standard\nsingle Watch R","Standard","Single Watch","R")
+   STANDARD_AST_rpp_wacr <- df %>% create_df(STANDARD_AST_rpp_wacr,"Standard\ncombo Watch R","Standard","Combo Watch","R")
+   STANDARD_AST_rpp_awar <- df %>% create_df(STANDARD_AST_rpp_awar,"Standard\nall Watch R","Standard","All Watch","R")
+   
+   acs_df <- data.frame(rbind(PDRx_rpp_ass,PDRx_rpp_acs,PDRx_rpp_aas,PDRx_rpp_iss,PDRx_rpp_ics,
+                              PDRx_rpp_ais,PDRx_rpp_oss,PDRx_rpp_ocs,PDRx_rpp_aos,PDRx_rpp_acss,
+                              PDRx_rpp_accs,PDRx_rpp_aacs,PDRx_rpp_wass,PDRx_rpp_wacs,PDRx_rpp_awas,
+                              PDRx_rpp_asr,PDRx_rpp_acr,PDRx_rpp_aar,PDRx_rpp_isr,PDRx_rpp_icr,
+                              PDRx_rpp_air,PDRx_rpp_osr,PDRx_rpp_ocr,PDRx_rpp_aor,PDRx_rpp_acsr,
+                              PDRx_rpp_accr,PDRx_rpp_aacr,PDRx_rpp_wasr,PDRx_rpp_wacr,PDRx_rpp_awar,
+                              STANDARD_AST_rpp_ass,STANDARD_AST_rpp_acs,STANDARD_AST_rpp_aas,STANDARD_AST_rpp_iss,
+                              STANDARD_AST_rpp_ics,STANDARD_AST_rpp_ais,STANDARD_AST_rpp_oss,STANDARD_AST_rpp_ocs,
+                              STANDARD_AST_rpp_aos,STANDARD_AST_rpp_acss,STANDARD_AST_rpp_accs,STANDARD_AST_rpp_aacs,
+                              STANDARD_AST_rpp_wass ,STANDARD_AST_rpp_wacs,STANDARD_AST_rpp_awas,STANDARD_AST_rpp_asr,
+                              STANDARD_AST_rpp_acr,STANDARD_AST_rpp_aar,STANDARD_AST_rpp_isr,STANDARD_AST_rpp_icr,
+                              STANDARD_AST_rpp_air,STANDARD_AST_rpp_osr,STANDARD_AST_rpp_ocr,STANDARD_AST_rpp_aor,
+                              STANDARD_AST_rpp_acsr,STANDARD_AST_rpp_accr,STANDARD_AST_rpp_aacr,STANDARD_AST_rpp_wasr,
+                              STANDARD_AST_rpp_wacr,STANDARD_AST_rpp_awar))
+   
+   acs_df <- acs_df %>% group_by(AWaRe_results) %>% mutate(iqr_min=quantile(n)[2],
+                                                           iqr_max=quantile(n)[4]) %>% 
+     ungroup() %>% 
+     mutate(iqr_min=case_when(iqr_min<0 ~ 0,TRUE~iqr_min))
+   acs_df <- acs_df %>% rename(Approach="Panel")
+   
+   summdf <- acs_df %>% group_by(AWaRe_results) %>% mutate(median_n = median(n)) %>%
+     ungroup() %>% left_join(acs_df %>% group_by(AWaRe_results) %>% 
+                               count(n,name="n_points"),by=c("AWaRe_results","n")) %>% distinct()
+   
+   acs_df
+   
+ }
> 
> ###Main dot plot of all S results and WHO Access S results
> main_dotplotter <- function(df,PDRx_1,standard_1,PDRx_2,standard_2,
+                             left_label,right_label,sens_addendum="") {
+   
+   plot_df <- df %>% filter(grepl(PDRx_1,AWaRe_results) |
+                              grepl(standard_1,AWaRe_results) |
+                              grepl(PDRx_2,AWaRe_results) |
+                              grepl(standard_2,AWaRe_results) )
+   
+   plot_df$AWaRe_results <- factor(plot_df$AWaRe_results,levels = c(PDRx_1,
+                                                                    standard_1,
+                                                                    PDRx_2,
+                                                                    standard_2))
+   
+   df_plot <- ggplot(plot_df,aes(x=AWaRe_results,y=n,color=Approach)) +
+     geom_jitter(colour="black", alpha=0.01, width=0.1,height=0.15) +
+     stat_summary(geom="point",fun="median",size=4)+
+     geom_errorbar(aes(ymin=iqr_min,ymax=iqr_max,width=0,color=Approach),show.legend = F)+
+     ylab("")+
+     ggtitle(glue("Microsimulation study:\nNumber of susceptible results provided per specimen\n{(sens_addendum)}")) +
+     theme_minimal() +
+     theme(axis.ticks.x = element_blank(),
+           axis.text.x = element_blank(),
+           axis.title.x = element_blank(),
+           axis.title.y = element_text(vjust=3),
+           plot.margin = unit(c(0.1,0.1,0.1,0.25),"inches"),
+           plot.title = element_text(hjust=0.5),
+           panel.grid.minor.y = element_blank(),
+           panel.grid.major.x = element_blank())+
+     geom_vline(xintercept = 2.5,linetype="dashed",color="grey") +
+     scale_y_continuous(limits = c(-0.15,7),breaks=c(0:6)) +
+     scale_color_manual(values=c("#00BFC4","#F8766D"))+
+     geom_text(x=1.5,y=6.75,label=glue("{left_label}"),color="#3C3C3C",size=4) +
+     geom_text(x=3.5,y=6.75,label=glue("{right_label}"),color="#3C3C3C",size=4)
+   
+   ggsave(glue("UF_{left_label}_{right_label}_plot.pdf"), plot = df_plot, device = "pdf", width = 6, height = 6,
+          path="/Users/alexhoward/Documents/Projects/UDAST_code")
+   
+   df_plot
+   
+ }
> 
> ###Determining total number of S or I results provided by personalised panel
> number_SorI_pdast <- function(df,which_abs) {
+   
+   n_all_s <- c()
+   
+   for(i in 1:nrow(df)) {
+     
+     n_ac_s <- sum((df %>%
+                      select(all_of(intersect(df %>% select(PDRx_1:PDRx_6) %>%dplyr::slice(i) %>% unlist(),which_abs))) %>% 
+                      dplyr::slice(i)) == "S" |
+                     (df %>%
+                        select(all_of(intersect(df %>% select(PDRx_1:PDRx_6) %>%dplyr::slice(i) %>% unlist(),which_abs))) %>% 
+                        dplyr::slice(i)) == "I")
+     
+     n_all_s <- n_all_s %>% append(n_ac_s)
+     
+   }
+   
+   n_all_s
+   
+ }
> 
> ###Determining total number of S or I results provided by standard panel
> number_SorI_standard <- function(df,which_abs) {
+   
+   n_all_s <- c()
+   
+   for(i in 1:nrow(df)) {
+     
+     n_ac_s <- sum((df %>%
+                      select(all_of(intersect(df %>% select(STANDARD_AST_1,STANDARD_AST_2,STANDARD_AST_3,
+                                                            STANDARD_AST_4,STANDARD_AST_5,STANDARD_AST_6) %>%dplyr::slice(i) %>% unlist(),which_abs))) %>% 
+                      dplyr::slice(i)) == "S" |
+                     (df %>%
+                        select(all_of(intersect(df %>% select(STANDARD_AST_1,STANDARD_AST_2,STANDARD_AST_3,
+                                                              STANDARD_AST_4,STANDARD_AST_5,STANDARD_AST_6) %>%dplyr::slice(i) %>% unlist(),which_abs))) %>% 
+                        dplyr::slice(i)) == "I")
+     
+     n_all_s <- n_all_s %>% append(n_ac_s)
+     
+   }
+   
+   n_all_s
+   
+ }
> 
> ##Data upload
> util_probs_df <- read_csv("dce_util_probs_df.csv")
Rows: 97902 Columns: 100                                                                                               
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (1): Antimicrobial
dbl (83): id_no, S, R, micro_specimen_id, subject_id, prob_CDI, prob_tox, abx_na...
lgl (16): I, NT, single_agent, AMP_R_value, SAM_R_value, TZP_R_value, CZO_R_valu...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> ur_util <- read_csv("interim_ur_util.csv")
Rows: 2646 Columns: 808                                                                                                
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (122): order_provider_id, spec_type_desc, test_name, org_name, AMP, SAM, TZ...
dbl   (87): subject_id, hadm_id, micro_specimen_id, spec_itemid, test_itemid, or...
lgl  (594): ab_name, UTI, pAMPr, pSAMr, pTZPr, pCZOr, pCROr, pCAZr, pFEPr, pMEMr...
dttm   (5): charttime, chartdate, storedate, storetime, dischtime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> train_abx <- read_csv("train_abx.csv")
Rows: 299393 Columns: 159                                                                                              
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (17): poe_id, order_provider_id, drug_type, drug, formulary_drug_cd, gsn, n...
dbl  (72): subject_id, row_id, hadm_id, pharmacy_id, poe_seq, dose_val_rx, form_...
lgl  (66): form_rx, is_abx, CDI, pHADM, pCDI, age65, AKI, Nephrotoxic_agent, Con...
dttm  (4): charttime, starttime, stoptime, dischtime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> urine_df <- read_csv("pos_urines.csv")
Rows: 54926 Columns: 308                                                                                               
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr   (40): order_provider_id, spec_type_desc, test_name, org_name, AMP, SAM, TZ...
dbl   (44): subject_id, hadm_id, micro_specimen_id, spec_itemid, test_itemid, or...
lgl  (220): ab_name, NA., UTI, pAMPr, pSAMr, pTZPr, pCZOr, pCROr, pCAZr, pFEPr, ...
dttm   (4): charttime, chartdate, storedate, storetime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> abx_ref <- read_csv("abx_ref_all_combos.csv")
Rows: 17020 Columns: 27                                                                                                
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (16): poe_id, order_provider_id, drug_type, drug, formulary_drug_cd, gsn, n...
dbl   (6): row_id, subject_id, hadm_id, pharmacy_id, poe_seq, doses_per_24_hrs
lgl   (2): form_rx, is_abx
dttm  (3): starttime, stoptime, charttime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> vitalsign <- read_csv("vitalsign.csv")
Rows: 1564610 Columns: 11                                                                                              
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (2): rhythm, pain
dbl  (8): subject_id, stay_id, temperature, heartrate, resprate, o2sat, sbp, dbp
dttm (1): charttime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> triage <- read_csv("triage.csv")
Rows: 425087 Columns: 11                                                                                               
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (2): pain, chiefcomplaint
dbl (9): subject_id, stay_id, temperature, heartrate, resprate, o2sat, sbp, dbp,...

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> edstays <- read_csv("edstays.csv")
Rows: 425087 Columns: 9                                                                                                
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (4): gender, race, arrival_transport, disposition
dbl  (3): subject_id, hadm_id, stay_id
dttm (2): intime, outtime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> pyxis <- read_csv("pyxis.csv") %>% rename(drug="name")
Rows: 1586053 Columns: 7                                                                                               
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr  (2): name, gsn
dbl  (4): subject_id, stay_id, med_rn, gsn_rn
dttm (1): charttime

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> ###Susceptibility plot
> susc_plotter_overall <- function(df,df2,subset="",measure,suffix="",agent_col1,agent_name1,agent_col2,agent_name2,variable) {
+   
+   agent_col1 <- enquo(agent_col1)
+   agent_col2 <- enquo(agent_col2)
+   
+   df$Metric <- factor(df$Metric, levels=c("All agents","Access agents","IV agents","Oral agents"))
+   
+   if (grepl("severity", variable)) {
+     
+     if (grepl("Access", suffix)&!grepl("inpatient", suffix)) {
+       
+       susplot <- ggplot(df, aes(x = Weight, y = Percentage, group = Metric, color = Metric, fill = Metric)) +
+         geom_area(position = "identity", alpha = 0.6) +
+         geom_hline(linetype = "dashed", yintercept = 70, color = "darkgreen") +
+         ylim(0, 100) +
+         theme_minimal() +
+         theme(
+           panel.grid.major.x = element_blank(),
+           panel.grid.major.y = element_blank(),
+           panel.grid.minor.x = element_blank(),
+           panel.grid.minor.y = element_blank()
+         ) +
+         ggtitle(glue("Urine isolate susceptibility to {subset}antimicrobial\n{suffix}")) +
+         xlab(glue("{variable}")) +
+         ylab("Percentage of isolates susceptible to recommendation") +
+         annotate("text", x = Inf, y = 72, label = "UN Access target", hjust = 1.1, color = "darkgreen") +
+         scale_x_continuous(breaks = weightseq)
+       
+     } else if (!grepl("Access", suffix)&!grepl("inpatient", suffix)) {
+       susplot <- ggplot(df, aes(x = Weight, y = Percentage, group = Metric, color = Metric, fill = Metric)) +
+         geom_area(position = "identity", alpha = 0.6) +
+         ylim(0, 100) +
+         theme_minimal() +
+         theme(
+           panel.grid.major.x = element_blank(),
+           panel.grid.major.y = element_blank(),
+           panel.grid.minor.x = element_blank(),
+           panel.grid.minor.y = element_blank()
+         ) +
+         ggtitle(glue("Urine isolate susceptibility to {subset}antimicrobial\n{suffix}")) +
+         xlab(glue("{variable}")) +
+         ylab("Percentage of isolates susceptible to recommendation") +
+         scale_x_continuous(breaks = weightseq)
+       
+     } else {
+       
+       susplot <- ggplot(df, aes(x = Weight, y = Percentage, group = Metric, color = Metric, fill = Metric)) +
+         geom_area(position = "identity", alpha = 0.6) +
+         geom_hline(linetype = "dashed", yintercept = 70, color = "darkgreen") +
+         ylim(0, 100) +
+         theme_minimal() +
+         theme(
+           panel.grid.major.x = element_blank(),
+           panel.grid.major.y = element_blank(),
+           panel.grid.minor.x = element_blank(),
+           panel.grid.minor.y = element_blank()
+         ) +
+         ggtitle(glue("Urine isolate susceptibility to {subset}antimicrobial\n{suffix}")) +
+         xlab(glue("{variable}")) +
+         ylab("Percentage of isolates susceptible to recommendation") +
+         annotate("text", x = Inf, y = 72, label = "UN Access target", hjust = 1.1, color = "darkgreen") +
+         scale_x_continuous(breaks = weightseq)
+     }
+     
+   } else {
+     
+     if (grepl("Access", suffix)&!grepl("inpatient", suffix)) {
+       susplot <- ggplot(df, aes(x = Weight, y = Percentage, group = Metric, color = Metric, fill = Metric)) +
+         geom_area(position = "identity", alpha = 0.6) +
+         geom_hline(linetype = "dashed", yintercept = 70, color = "darkgreen") +
+         ylim(0, 100) +
+         theme_minimal() +
+         theme(
+           panel.grid.major.x = element_blank(),
+           panel.grid.major.y = element_blank(),
+           panel.grid.minor.x = element_blank(),
+           panel.grid.minor.y = element_blank()
+         ) +
+         ggtitle(glue("Urine isolate susceptibility to {subset}antimicrobial\n{suffix}")) +
+         xlab(glue("{variable}")) +
+         ylab("Percentage of isolates susceptible to recommendation") +
+         annotate("text", x = Inf, y = 72, label = "UN Access target", hjust = 1.1, color = "darkgreen")
+       
+     } else if (!grepl("Access", suffix)&!grepl("inpatient", suffix)) {
+       
+       susplot <- ggplot(df, aes(x = Weight, y = Percentage, group = Metric, color = Metric, fill = Metric)) +
+         geom_area(position = "identity", alpha = 0.6) +
+         ylim(0, 100) +
+         theme_minimal() +
+         theme(
+           panel.grid.major.x = element_blank(),
+           panel.grid.major.y = element_blank(),
+           panel.grid.minor.x = element_blank(),
+           panel.grid.minor.y = element_blank()
+         ) +
+         ggtitle(glue("Urine isolate susceptibility to {subset}antimicrobial\n{suffix}")) +
+         xlab(glue("{variable}")) +
+         ylab("Percentage of isolates susceptible to recommendation") +
+         annotate("text", x = Inf, y = (nrow(df2 %>% filter(!!agent_col1 == "S" | !!agent_col1 == "I")) / nrow(df2)) * 100 + 2, label = glue(agent_name1), hjust = 1.1, color = "gray16") +
+         annotate("text", x = Inf, y = (nrow(df2 %>% filter(!!agent_col2 == "S" | !!agent_col2 == "I")) / nrow(df2)) * 100 + 2, label = glue(agent_name2), hjust = 1.1, color = "gray16")
+     } else {
+       
+       susplot <- ggplot(df, aes(x = Weight, y = Percentage, group = Metric, color = Metric, fill = Metric)) +
+         geom_area(position = "identity", alpha = 0.6) +
+         ylim(0, 100) +
+         theme_minimal() +
+         theme(
+           panel.grid.major.x = element_blank(),
+           panel.grid.major.y = element_blank(),
+           panel.grid.minor.x = element_blank(),
+           panel.grid.minor.y = element_blank()
+         ) +
+         ggtitle(glue("Urine isolate susceptibility to {subset}antimicrobial\n{suffix}")) +
+         xlab(glue("{variable}")) +
+         ylab("Percentage of isolates susceptible to recommendation") +
+         scale_x_continuous(breaks = weightseq)
+       
+     }
+   }
+   
+   
+   
+   ggsave(glue("{subset}_{measure}_{suffix}_susplot.pdf"), plot = susplot, device = "pdf", width = 10, height = 6,
+          path="/Users/alexhoward/Documents/Projects/UDAST_code")
+   
+   susplot <<-susplot
+   
+   print(susplot)
+   
+ }
> overall_xg_plot_df <- read_csv("overall_xg_plot_df.csv")
Rows: 16 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_df_2 <- read_csv("overall_xg_plot_df_2.csv")
Rows: 16 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_df_comb <- read_csv("overall_xg_plot_df_comb.csv")
Rows: 16 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_df_px_abx <- read_csv("overall_xg_plot_df_px_abx.csv")
Rows: 16 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_iv <- overall_xg_plot_df %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity (proportion of antibiotics with an IV option)")
Error in susc_plotter_overall(., ur_util, "overall ", measure = "MEWS",  : 
  object 'weightseq' not found
> ###Proportion plot dataframes
> weightseq <- c(0,3)
> overall_xg_plot_iv <- overall_xg_plot_df %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity (proportion of antibiotics with an IV option)")
> illplot_1 <- susplot
> overall_xg_plot_oral <- overall_xg_plot_df %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity (proportion of antibiotics with an oral option)")
> illplot_2 <- susplot
> overall_xg_plot_access <- overall_xg_plot_df %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity (proportion of WHO Access agents)")
> illplot_3 <- susplot
> ###Proportion plot dataframes
> weightseq <- seq(0,3)
> overall_xg_plot_iv <- overall_xg_plot_df %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity (proportion of antibiotics with an IV option)")
> illplot_1 <- susplot
> overall_xg_plot_oral <- overall_xg_plot_df %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity (proportion of antibiotics with an oral option)")
> illplot_2 <- susplot
> overall_xg_plot_access <- overall_xg_plot_df %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity (proportion of WHO Access agents)")
> illplot_3 <- susplot
> overall_xg_plot_iv_2 <- overall_xg_plot_df_2 %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_2 %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity (proportion of 2nd-line antibiotics with an IV option)")
> overall_xg_plot_oral_2 <- overall_xg_plot_df_2 %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_2 %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity (proportion of 2nd-line antibiotics with an oral option)")
> overall_xg_plot_access_2 <- overall_xg_plot_df_2 %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_2 %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity (proportion of 2nd-line WHO Access agents)")
> overall_xg_plot_iv <- overall_xg_plot_df %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity\n(proportion of antibiotics with an IV option)")
> illplot_1 <- susplot
> overall_xg_plot_oral <- overall_xg_plot_df %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity\n(proportion of antibiotics with an oral option)")
> illplot_2 <- susplot
> overall_xg_plot_access <- overall_xg_plot_df %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity\n(proportion of WHO Access agents)")
> overall_xg_plot_iv_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed\naccording to illness severity (proportion of antibiotics with an IV option)")
> illplot_4 <- susplot
> overall_xg_plot_oral_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed\naccording to illness severity (proportion of antibiotics with an oral option)")
> illplot_5 <- susplot
> overall_xg_plot_access_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed\naccording to illness severity (proportion of WHO Access agents)")
> overall_xg_plot_iv_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)")
> illplot_4 <- susplot
> overall_xg_plot_oral_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)")
> illplot_5 <- susplot
> overall_xg_plot_access_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed according to illness severity\n(proportion of WHO Access agents)")
> overall_xg_plot_iv_comb <- overall_xg_plot_df_comb %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_comb %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity\n(proportion of antibiotics with an IV option, including combinations)")
> overall_xg_plot_oral_comb <- overall_xg_plot_df_comb %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_comb %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity\n(proportion of antibiotics with an oral option, including combinations)")
> overall_xg_plot_access_comb <- overall_xg_plot_df_comb %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_comb %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                   agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                   suffix="recommended according to illness severity\n(proportion of WHO Access agents, including combinations)")
> overall_xg_plot_iv_imp <- overall_xg_plot_df_imp %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
Error: object 'overall_xg_plot_df_imp' not found
> overall_xg_plot_df_imp <- read_csv("overall_xg_plot_df_imp.csv")
Rows: 16 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_iv_imp <- overall_xg_plot_df_imp %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_imp %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity\n(proportion of recommended antibiotics with an IV option, improved predictions)")
> overall_xg_plot_oral_imp <- overall_xg_plot_df_imp %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_imp %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity\n(proportion of recommended antibiotics with an oral option, improved predictions)")
> overall_xg_plot_access_imp <- overall_xg_plot_df_imp %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_imp %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                   agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                   suffix="recommended according to illness severity\n(proportion of recommended WHO Access agents, improved predictions)")
> overall_xg_plot_iv_2 <- overall_xg_plot_df_2 %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_2 %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity\n(proportion of 2nd-line antibiotics with an IV option)")
> overall_xg_plot_oral_2 <- overall_xg_plot_df_2 %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_2 %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity\n(proportion of 2nd-line antibiotics with an oral option)")
> overall_xg_plot_access_2 <- overall_xg_plot_df_2 %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_2 %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity\n(proportion of 2nd-line WHO Access agents)")
> overall_xg_plot_iv_comb <- overall_xg_plot_df_comb %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_comb %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity\n(proportion of antibiotics with an IV option, including combinations)")
> overall_xg_plot_oral_comb <- overall_xg_plot_df_comb %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_comb %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity\n(proportion of antibiotics with an oral option, including combinations)")
> overall_xg_plot_access_comb <- overall_xg_plot_df_comb %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_comb %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                   agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                   suffix="recommended according to illness severity\n(proportion of WHO Access agents, including combinations)")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity (proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion of WHO Access agents)_susplot.pdf"
> overall_xg_plot_iv_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)")
> illplot_4 <- susplot
> overall_xg_plot_oral_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)")
> illplot_5 <- susplot
> overall_xg_plot_access_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed according to illness severity\n(proportion of WHO Access agents)")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity (proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion of WHO Access agents)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf"
> overall_xg_plot_iv <- overall_xg_plot_df %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended according to illness severity\n(proportion of antibiotics with an IV option)")
> illplot_1 <- susplot
> overall_xg_plot_oral <- overall_xg_plot_df %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended according to illness severity\n(proportion of antibiotics with an oral option)")
> illplot_2 <- susplot
> overall_xg_plot_access <- overall_xg_plot_df %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended according to illness severity\n(proportion of WHO Access agents)")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity?(proportion of WHO Access agents)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity?(proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity?(proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity?(proportion of WHO Access agents)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of 2nd-line WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of 2nd-line antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics(normalizePath("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of 2nd-line antibiotics with an IV option)_susplot.pdf"))
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot_2.pdf")
> 
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_according to illness severity (proportion of WHO Access agents, including combinations)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_according to illness severity (proportion of antibiotics with an oral option, including combinations)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_according to illness severity (proportion of antibiotics with an IV option, including combinations)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/ilness_comboplot.pdf")
> 
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents, including combinations)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option, including combinations)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option, including combinations)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/ilness_comboplot.pdf")
> 
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of recommended WHO Access agents, improved predictions)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of recommended antibiotics with an oral option, improved predictions)_susplot.pdf")
> knitr::include_graphics(normalizePath("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of recommended antibiotics with an IV option, improved predictions)_susplot.pdf"))
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot_imp.pdf")
> 
> overall_plot_df_nit <- read_csv("overall_plot_df_nit.csv")
Rows: 36 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_df_ill <- read_csv("overall_xg_plot_df_ill.csv")
Rows: 28 Columns: 3                                                                                                    
── Column specification ────────────────────────────────────────────────────────────
Delimiter: ","
chr (1): Metric
dbl (2): Percentage, Weight

ℹ Use `spec()` to retrieve the full column specification for this data.
ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.
> overall_xg_plot_iv_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended in illness severity sensitivity analysis\n(proportion of antibiotics with an IV option)")
> overall_xg_plot_oral_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended in illness severity sensitivity analysis\n(proportion of antibiotics with an oral option)")
> overall_xg_plot_access_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)")
Error in grDevices::pdf(file = filename, ..., version = version) : 
  cannot open file '/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)_susplot.pdf'
> overall_xg_plot_iv_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="recommended in illness severity sensitivity analysis\n(proportion of antibiotics with an IV option)")
> overall_xg_plot_oral_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="recommended in illness severity sensitivity analysis\n(proportion of antibiotics with an oral option)")
> overall_xg_plot_access_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)")
Error in grDevices::pdf(file = filename, ..., version = version) : 
  cannot open file '/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)_susplot.pdf'
> overall_xg_plot_access_ill <- overall_xg_plot_df_ill %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_ill %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="recommended in illness severity sensitivity analysis\n(proportion of WHO Access agents)")
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis/n(proportion of WHO Access agents)_susplot.pdf"
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended in illness severity sensitivity analysis\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot_ill.pdf")
> 
> overall_nit_plot_iv <- overall_plot_df_nit %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_nit_plot_iv %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Nitrofurantoin median resistance probability",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                              agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                              suffix="recommended according to median nitrofurantoin resistance probability\n(proportion of IV-administrable agents)")
> overall_nit_plot_oral <- overall_plot_df_nit %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_nit_plot_oral %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Nitrofurantoin median resistance probability",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                suffix="recommended according to median nitrofurantoin resistance probability\n(proportion of orally-administrable agents)")
> overall_nit_plot_access <- overall_plot_df_nit %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_nit_plot_access %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Nitrofurantoin median resistance probability",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                  agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                  suffix="recommended according to median nitrofurantoin resistance probability\n(proportion of WHO Access agents)")
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to median nitrofurantoin resistance probability\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to median nitrofurantoin resistance probability\n(proportion of orally-administrable agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to median nitrofurantoin resistance probability\n(proportion of IV-administrable agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/nitres_abplot.pdf")
> 
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> overall_xg_plot_iv_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)")
> illplot_4 <- susplot
> overall_xg_plot_oral_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)")
> illplot_5 <- susplot
> overall_xg_plot_access_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed according to illness severity\n(proportion of WHO Access agents)")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> overall_xg_plot_iv_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)")
> illplot_4 <- susplot
> overall_xg_plot_oral_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)")
> illplot_5 <- susplot
> overall_xg_plot_access_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed according to illness severity\n(proportion of WHO Access agents)")
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="prescribed according to illness severity\n(proportion of WHO Access agents)")
> overall_xg_plot_iv_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|oral)",Metric,ignore.case=T))
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed according to illness severity (proportion\nof antibiotics with an IV option)")
> illplot_4 <- susplot
> overall_xg_plot_oral_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(access|iv)",Metric,ignore.case=T))
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity (proportion\nof antibiotics with an oral option)")
> illplot_5 <- susplot
> overall_xg_plot_access_px_abx <- overall_xg_plot_df_px_abx %>% filter(!grepl("(oral|iv)",Metric,ignore.case=T))
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed according to illness severity (proportion\nof WHO Access agents)")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion\nof WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity(proportion\nof antibiotics with an oral option)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity(proportion\nof antibiotics with an oral option)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity(proportion
of antibiotics with an oral option)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion\nof WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity(proportion\nof antibiotics with an oral option)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity(proportion\nof antibiotics with an oral option)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity(proportion
of antibiotics with an oral option)_susplot.pdf"
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity (proportion\nof antibiotics with an oral option)")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion\nof WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity(proportion\nof antibiotics with an oral option)_susplot.pdf")
Error in knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity(proportion\nof antibiotics with an oral option)_susplot.pdf") : 
  Cannot find the file(s): "/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity(proportion
of antibiotics with an oral option)_susplot.pdf"
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion\nof WHO Access agents)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion\nof antibiotics with an oral option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
> knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity (proportion\nof antibiotics with an IV option)_susplot.pdf")
> overall_xg_plot_iv_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                             agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                             suffix="actually prescribed according to illness severity (proportion of antibiotics with an IV option)")
> overall_xg_plot_access_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                                 agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                                 suffix="actually prescribed according to illness severity (proportion of WHO Access agents)")
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity (proportion of antibiotics with an oral option)")
> overall_xg_plot_oral_px_abx %>% susc_plotter_overall(ur_util,"overall ", measure="MEWS",variable="Illness severity score",agent_col1=NIT,agent_name1="Nitrofurantoin",
+                                               agent_col2=TZP,agent_name2="Piperacillin-tazobactam",
+                                               suffix="actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)")
> 
