---
title: "Automating personalised antibiotic choices using a machine learning-based utility function: a microsimulation study"
format:
  docx:
    reference-doc: doc_template.docx
bibliography: UF_references.bib
csl: /Users/alexhoward/Zotero/styles/the-lancet-infectious-diseases.csl
editor: visual
---

Alex Howard\*\
\*corresponding author alexander.howard\@liverpool.ac.uk\
\*\*joint senior author

```{r, echo=FALSE,message=FALSE,warning=FALSE}

##Packages
library(tidyverse)
library(knitr)
library(glue)
library(scales)
library(coin)
library(rlang)

##Read-in
ur_util <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/ur_util_manuscript.csv")
util_probs_df <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/util_probs_df_manuscript.csv")
desc_tab <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/uf_desctab.csv")
urines5 <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/urines5.csv")
abx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/interim_abx.csv")
ab_tab <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/ab_tab.csv")
metrics_singles_table <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/metrics_singles_table.csv")
prim <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_xg_plot_df.csv")
pdrx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/abplot_df.csv")
pdrx_px_abx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/abplot_df_px_abx.csv")
cdi_df<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cdi_df.csv")
tox_df<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/tox_df.csv")
cost_df<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cost_df.csv")
cdi_df_px_abx<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cdi_df_px_abx.csv")
tox_df_px_abx<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/tox_df_px_abx.csv")
cost_df_px_abx<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cost_df_px_abx.csv")
stabmets <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_stability_metrics.csv")
timemets <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_time_sens_metrics.csv")
fairmets <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_fairness_metrics.csv")
overall_xg_plot_df <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_xg_plot_df.csv")
overall_xg_plot_df_px_abx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_xg_plot_df_px_abx.csv")

urt <- function(df,subtype) {
  
  urtot1 <- desc_tab %>% filter(Subtype==subtype) %>% select(`Urine model n (%)`)
    urtot1 <- sub(" .*", "",urtot1) %>% as.numeric()
    urtot2 <- desc_tab %>% filter(Subtype==subtype) %>% select(`Urine microsimulation n (%)`)
    urtot2 <- sub(" .*", "",urtot2) %>% as.numeric()
    
    littot <- urtot1+urtot2
    bigtot <- nrow(urines5)+nrow(ur_util)
    
    perc <- ((littot/bigtot)*100) %>% round(1) %>% format(nsmall=1)
    
    glue("{perc}%, n={(littot) %>% comma()}")

}
abt <- function(df,subtype) {
  
  urtot1 <- desc_tab %>% filter(Subtype==subtype) %>% select(`Prescription model n (%)`)
    urtot1 <- sub(" .*", "",urtot1) %>% as.numeric()
    
    bigtot <- nrow(abx %>% distinct(subject_id))
    
    perc <- ((urtot1/bigtot)*100) %>% round(1) %>% format(nsmall=1)
    
    glue("{perc}%, n={(urtot1) %>% comma()}")

}
abt2 <- function(df,numb) {
  
  abname <- df %>% dplyr::slice(numb) %>% select(`Antibiotic(s)`) %>% unlist()
  urtot1 <- df %>% dplyr::slice(numb) %>% select(`n (%)`) %>% unlist()
  urtot1 <- sub(" .*", "",urtot1) %>% as.numeric()
    
    bigtot <- nrow(abx)
    
    perc <- ((urtot1/bigtot)*100) %>% round(1) %>% format(nsmall=1)
    
    glue("{abname %>% tolower()} ({perc}%, n={(urtot1) %>% comma()})")

}
lowsev <- function(df,subtype) {
  
  perc_overall <- df %>% filter(Metric==subtype)
  perc_overall <- perc_overall %>% dplyr::slice(1) %>% select(Percentage) %>% unlist() %>% 
    round(1)
  
  n_overall <- round(nrow(ur_util)*(perc_overall/100)) %>% comma()
  
  glue("{perc_overall %>% format(nsmall=1)}% (n={n_overall})")
  
}
hisev <- function(df,subtype) {
  
  perc_overall <- df %>% filter(Metric==subtype)
  perc_overall <- perc_overall %>% dplyr::slice(nrow(perc_overall)) %>% select(Percentage) %>% unlist() %>% round(1)
  
  n_overall <- round(nrow(ur_util)*(perc_overall/100)) %>% comma()
  
  glue("{perc_overall %>% format(nsmall=1)}% (n={n_overall})")
  
}
lowabx <- function(df) {
  perc <- df %>% filter(`Illness severity`==0) %>% arrange(desc(`Percentage of first-line recommendations`)) %>%
    dplyr::slice(1) %>% select(`Percentage of first-line recommendations`) %>% 
  unlist() %>% round(1)
  
  numb <- round(nrow(ur_util)*(perc/100)) %>% comma()
  
  glue("{perc %>% format(nsmall=1)}%, n={numb}")
  
}
hiabx <- function(df) {
  perc <- df %>% filter(`Illness severity`==max(df$`Illness severity`)) %>% arrange(desc(`Percentage of first-line recommendations`)) %>%
    dplyr::slice(1) %>% select(`Percentage of first-line recommendations`) %>% 
  unlist() %>% round(1)
  
  numb <- round(nrow(ur_util)*(perc/100)) %>% comma()
  
  glue("{perc %>% format(nsmall=1)}%, n={numb}")
  
}
zeroprob <- function(df) {
  df %>% dplyr::slice(1) %>% select(med) %>% round(3) %>% unlist()
}
maxprob <- function(df) {
  df %>% dplyr::slice(nrow(df)) %>% distinct(med) %>% select(med) %>% round(3) %>% unlist()
}
aucfilter <- function(df,model) {
  df %>% filter(Model==model) %>% select(AUROC) %>% unlist()
}
utilsum <- function(df,sliceval,type="median") {

  if (type=="median") {
top <- util_probs_df %>% group_by(Antimicrobial) %>% summarise(
  medvals=median(Rx_utility),
  iq1=quantile(Rx_utility)[2],
  iq3=quantile(Rx_utility)[4]
) %>% ungroup() %>% arrange(desc(medvals)) %>% 
  dplyr::slice(sliceval) 

medval <- round(top %>% select(medvals) %>% unlist(),3)
iq1 <- round(top %>% select(iq1) %>% unlist(),3)
iq3 <- round(top %>% select(iq1) %>% unlist(),3)

glue("{medval}, IQR {iq1} to {iq3}")

  } else {
    
    glue("{round(df %>% group_by(Antimicrobial) %>% summarise(
  medvals=median(Rx_utility),
  iq1=quantile(Rx_utility)[2],
  iq3=quantile(Rx_utility)[4]
) %>% ungroup() %>% mutate(iqr=iq3-iq1) %>% arrange(desc(iqr)) %>% 
  dplyr::slice(1) %>% select(iqr) %>% unlist(),3)}")
    
  }
}

###Reference lists
all_singles <- c("AMP","SAM","TZP","CZO","CRO","CAZ","FEP",
                 "MEM","CIP","GEN","SXT","NIT","VAN")
ab_singles <- all_singles
all_combos <- combn(all_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_abs <- c(all_singles,all_combos)
iv_singles <- c("AMP","SAM","TZP","CIP","FEP","CAZ","CRO","CZO","MEM",
                "GEN","SXT","VAN")
iv_ab_singles <- iv_singles
iv_combos <- combn(iv_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_ivs <- c(iv_singles, iv_combos)
oral_singles <- c("AMP","SAM","CIP",
                  "SXT","NIT")
oral_ab_singles <- oral_singles
oral_combos <- combn(oral_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_orals <- c(oral_singles, oral_combos)
access_singles <- c("AMP","SAM","GEN",
                    "SXT","NIT","CZO")
access_combos <- combn(access_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_access <- c(access_singles, access_combos)
watch_singles <- c("CRO","CAZ","FEP","MEM","TZP","CIP","VAN")
watch_combos <- combn(watch_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_watch <- c(watch_singles, watch_combos)
antimicrobial_map <- c(
  "Ampicillin" = "AMP",
  "Ampicillin-sulbactam" = "SAM",
  "Piperacillin-tazobactam" = "TZP",
  "Cefazolin" = "CZO",
  "Ceftriaxone" = "CRO",
  "Ceftazidime" = "CAZ",
  "Cefepime" = "FEP",
  "Meropenem" = "MEM",
  "Ciprofloxacin" = "CIP",
  "Gentamicin" = "GEN",
  "Trimethoprim-sulfamethoxazole" = "SXT",
  "Nitrofurantoin" = "NIT",
  "Vancomycin" = "VAN"
)
map_combinations <- combn(names(antimicrobial_map), 2, simplify = FALSE)
combined_antimicrobial_map <- c(
  antimicrobial_map,
  setNames(
    lapply(map_combinations, function(x) paste(antimicrobial_map[x], collapse = "_")),
    sapply(map_combinations, function(x) paste(x, collapse = " & "))
  )
)
singles_map <- combined_antimicrobial_map[combined_antimicrobial_map%in%all_singles]
iv_singles_map <- combined_antimicrobial_map[combined_antimicrobial_map%in%iv_singles]
oral_singles_map <- combined_antimicrobial_map[combined_antimicrobial_map%in%oral_singles]
modified_abx_map <- combined_antimicrobial_map
names(modified_abx_map) <- str_replace_all(names(modified_abx_map),
                                           " & ", "_")
iv_modified_abx_map <- modified_abx_map[modified_abx_map%in%all_ivs]
oral_modified_abx_map <- modified_abx_map[modified_abx_map%in%all_orals]
access_modified_abx_map <- modified_abx_map[modified_abx_map%in%all_access]

##S IQR for cefazolin
wideiqr <- util_probs_df %>% group_by(Antimicrobial) %>% 
  summarise(iqr=IQR(S)) %>% arrange(desc(iqr)) %>% 
  dplyr::slice(1) %>% select(iqr) %>% unlist()

##Counting instances of resistance
res <- ur_util %>% filter(acuity==3) %>% select(AMP:VAN)
res[res=="R"|res=="NT"] <- "1"
res[res=="S"|res=="I"] <- "0"
res <- res %>% mutate(across(everything(),as.numeric))
n3 <- sum(res)
p3 <- round((n3/(ncol(res)*nrow(res)))*100,1)
res2 <- ur_util %>% filter(acuity==0) %>% select(AMP:VAN)
res2[res2=="R"|res2=="NT"] <- "1"
res2[res2=="S"|res2=="I"] <- "0"
res2 <- res2 %>% mutate(across(everything(),as.numeric))
n0 <- sum(res2)
p0 <- round((n0/(ncol(res2)*nrow(res2)))*100,1)
t0 <- glue("{p0}% of results, n={n0}")
t3 <- glue("{p3}% of results, n={n3}")

##Chi-squared tests for proportions of first-line coverage
n_all <- c(nrow(ur_util), nrow(ur_util))

###All antibiotics
x_all <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I"))), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I"))))
perc_all1 <- round(prop.test(x_all, n_all)$estimate[1], 3)
perc_all2 <- round(prop.test(x_all, n_all)$estimate[2], 3)
p2_all <- round(prop.test(x_all, n_all)$p.value, 3)
ci1_all <- round(prop.test(x_all, n_all)$conf.int[1], 3)
ci2_all <- round(prop.test(x_all, n_all)$conf.int[2], 3)

chi_all <- glue("({perc_all1} versus {perc_all2}, 95% CI of difference {ci1_all} to {ci2_all}, p{ifelse(p2_all<0.001,'<0.001',paste(' =',p2_all))})")

##Access antibiotics
x_acs <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I")&PDRx_1%in%access_singles)), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I")&Px_Abx%in%access_modified_abx_map)))
perc_acs1 <- round(prop.test(x_acs, n_all)$estimate[1], 3)
perc_acs2 <- round(prop.test(x_acs, n_all)$estimate[2], 3)
p2_acs <- round(prop.test(x_acs, n_all)$p.value, 3)
ci1_acs <- round(prop.test(x_acs, n_all)$conf.int[1], 3)
ci2_acs <- round(prop.test(x_acs, n_all)$conf.int[2], 3)

chi_acs <- glue("({perc_acs1} versus {perc_acs2}, 95% CI of difference {ci1_acs} to {ci2_acs}, p{ifelse(p2_acs<0.001,'<0.001',paste(' =',p2_acs))})")

###Oral antibiotics
x_orals <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I")&PDRx_1%in%oral_singles)), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I")&Px_Abx%in%oral_modified_abx_map)))
perc_orals1 <- round(prop.test(x_orals, n_all)$estimate[1], 3)
perc_orals2 <- round(prop.test(x_orals, n_all)$estimate[2], 3)
p2_orals <- round(prop.test(x_orals, n_all)$p.value, 3)
ci1_orals <- round(prop.test(x_orals, n_all)$conf.int[1], 3)
ci2_orals <- round(prop.test(x_orals, n_all)$conf.int[2], 3)

chi_orals <- glue("({perc_orals1} versus {perc_orals2}, 95% CI of difference {ci1_orals} to {ci2_orals}, p{ifelse(p2_orals<0.001,'<0.001',paste(' =',p2_orals))})")

###IV antibiotics
x_ivs <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I")&PDRx_1%in%iv_singles)), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I")&Px_Abx%in%iv_modified_abx_map)))
perc_ivs1 <- round(prop.test(x_ivs, n_all)$estimate[1], 3)
perc_ivs2 <- round(prop.test(x_ivs, n_all)$estimate[2], 3)
p2_ivs <- round(prop.test(x_ivs, n_all)$p.value, 3)
ci1_ivs <- round(prop.test(x_ivs, n_all)$conf.int[1], 3)
ci2_ivs <- round(prop.test(x_ivs, n_all)$conf.int[2], 3)

chi_ivs <- glue("({perc_ivs1} versus {perc_ivs2}, 95% CI of difference {ci1_ivs} to {ci2_ivs}, p{ifelse(p2_ivs<0.001,'<0.001',paste(' =',p2_ivs))})")

##Percentage comparison at high illness severity
perc_util <- overall_xg_plot_df %>% filter(Metric=="All agents"&Weight==3) %>% select(Percentage) %>% unlist()
perc_actual <- overall_xg_plot_df_px_abx %>% filter(Metric=="All agents"&Weight==3) %>% select(Percentage) %>% unlist()

##Wilcoxon test for numbers of antibiotics with coverage in teh top six
m_aut_all <- median(ur_util$n_allS_PDRx6,na.rm=T)
m_stan_all <- median(ur_util$n_allS_standard6)
m_aut_acs <- median(ur_util$n_acS_PDRx6)
m_stan_acs <- median(ur_util$n_acS_standard6)

iq1aut_all <- quantile(ur_util$n_allS_PDRx6)[2]
iq1stan_all <- quantile(ur_util$n_allS_standard6)[2]
iq1aut_acs <- quantile(ur_util$n_acS_PDRx6)[2]
iq1stan_acs <- quantile(ur_util$n_acS_standard6)[2]

iq3aut_all <- quantile(ur_util$n_allS_PDRx6)[4]
iq3stan_all <- quantile(ur_util$n_allS_standard6)[4]
iq3aut_acs <- quantile(ur_util$n_acS_PDRx6)[4]
iq3stan_acs <- quantile(ur_util$n_acS_standard6)[4]

p_acs <- round(wilcox.test(ur_util %>% pull(n_acS_PDRx6), ur_util %>% pull(n_acS_standard6), paired = TRUE, conf.int = TRUE)$p.value, 3)
p_all <- round(wilcox.test(ur_util %>% pull(n_allS_PDRx6), ur_util %>% pull(n_allS_standard6), paired = TRUE, conf.int = TRUE)$p.value, 3)

z_access <- statistic(wilcoxsign_test(as.formula(paste0(quo_text(ur_util$n_acS_PDRx6), " ~ ", quo_text(ur_util$n_acS_standard6))), data = ur_util), "standardized")[1]
acs_effectsize <- round(z_access / sqrt(nrow(ur_util)), 3)

z_all <- statistic(wilcoxsign_test(as.formula(paste0(quo_text(ur_util$n_allS_PDRx6), " ~ ", quo_text(ur_util$n_allS_standard6))), data = ur_util), "standardized")[1]
all_effectsize <- round(z_all / sqrt(nrow(ur_util)), 3)

wil_all <- glue("(median {m_aut_all}, IQR {iq1aut_all} to {iq3aut_all} versus median {m_stan_all}, IQR {iq1stan_all} to {iq3stan_all}, p{ifelse(p_all<0.001,'<0.001',paste('=',p_all))}, effect size {all_effectsize})")

wil_acs <- glue("(median {m_aut_acs}, IQR {iq1aut_acs} to {iq3aut_acs} versus median {m_stan_acs}, IQR {iq1stan_acs} to {iq3stan_acs}, p{ifelse(p_acs<0.001,'<0.001',paste('=',p_acs))}, effect size {acs_effectsize})")

```

# Research in context

**Evidence before this study**

Antibiotic prescribing is a key driver of antimicrobial resistance (AMR) – the World Health Organisation (WHO) has therefore set a target for countries to reduce their use of harmful, broad-spectrum antibiotics by 2030. Meeting this target is made challenging by the tension between the need to ensure antibiotic efficacy in patients at high risk of clinical deterioration and the need to minimise individual/population harm from antibiotic treatment. Machine learning is a promising tool when applied to healthcare data to help make empirical treatment decisions that balance these elements because of its ability to predict antibiotic treatment outcomes. Its suitability for this application, however, is hampered by the lack of a robust utility function – a mathematical equation that safely quantifies the value of different antibiotic treatment options by weighting the importance of predicted treatment outcomes. 

**Added value of this study**

In this study, we construct a utility function that calculates the value of 13 different antibiotic treatment options for individual patients with urinary tract infection (UTI). The utility function uses clinical prediction models to calculate the probability of different antibiotic outcomes in individual patients, then weights these probabilities by their importance according to a panel of expert prescribers. The utility function manages the tension between antibiotic efficacy and harm by prioritising treatment efficacy over medium- and long-term individual and population considerations (e.g., development of antibiotic resistance) as illness severity increases. We use a microsimulation study design on real-world prescribing and microbiology data that demonstrates the ability of this utility function to inform safe antibiotic recommendations for UTI. 

**Implications of all the available evidence**

The utility function described in this study could power decision support tools that leverage data, machine learning, and domain expertise to help clinicians, healthcare providers, and countries reduce medium- and long-term antibiotic harm to individuals and populations without compromising on treatment efficacy in patients at risk of deterioration. Further clinical research with decision support tools for antibiotic treatment and testing based on the utility function is required across a range of populations to better understand the impact of the algorithmic decision approach on individual and population outcomes. 

# Abstract

## Background

Data-driven decision support tools that incorporate machine learning could improve individual and population outcomes from antibiotic treatment by predicting these outcomes to personalise antibiotic treatment – to do this effectively requires a utility function that quantifies the value of different antibiotic treatment options. Here, we construct and assess a utility function that personalises urinary tract infection (UTI) antibiotic treatment by combining machine learning algorithms with real-world expert prescriber intuition. 

## Methods

Retrospective healthcare data were used to calculate treatment utility for 13 antibiotics in `r nrow(ur_util) %>% comma()` patients whose urine was sent for culture using a utility function that incorporated probability predictions, importance weighting, and illness severity inputs. The proportion of urine pathogens covered by WHO Access category, oral, and intravenous utility-based personalised UTI treatment recommendations were compared to those actually prescribed, and the number of overall and Access antibiotics in the top six recommendations were compared to a standard panel.

## Findings

Compared to antibiotics actually prescribed, the utility function recommendation successfully covered the urinary pathogen in more cases overall `r chi_all`, with an Access antibiotic in more cases `r chi_acs`, an oral antibiotic in more cases `r chi_orals`, and an intravenous antibiotic in fewer cases `r chi_ivs`. The top six utility function recommendations contained more Access antibiotics that covered the urinary pathogen than the standard panel `r wil_acs`, but fewer antibiotics overall that covered the urinary pathogen `r wil_all`.

## Interpretation

Our utility function could improve individual and population outcomes from antibiotic treatment by leveraging machine learning and prescriber intuition to balance the risk of antibiotic failure against the risk of antibiotic harm. Decision support tools that tailor treatments to diverse individuals and populations should be tested in clinical studies.

## Funding

Funded in part by the Wellcome Trust grant ref: 226691/Z/22/Z. Supported by the Office for Life Sciences Data-Action Accelerator award.

# Introduction

Antimicrobial resistance (AMR) is a significant threat to the delivery of global healthcare.[@walshAntimicrobialResistanceAddressing2023] In September 2024, the United Nations General Assembly (UNGA) committed to ensuring that the safest, cheapest antibiotics with the lowest AMR risk (World Health Organisation \[WHO\] Access Category antibiotics) make up 70% of global antibiotic use in healthcare by 2030.[@un2024_amr] The challenge in achieving this goal is determining when it is safe to empirically use Access agents, which often have a relatively narrow spectrum of activity and will therefore be avoided in favour of more harmful Watch category agents to ensure treatment efficacy. This issue is compounded when there is doubt about the presence of resistance and/or there are significant adverse consequences for incorrect choices (e.g., treatment of systemically unwell patients). [@howardPersonalisedAntimicrobialSusceptibility2024, @rheeTrendsEmpiricBroadSpectrum2024]

Algorithmic support of antimicrobial treatment choice is a potential means to deliver optimally precise antimicrobial therapy - this approach can quantify the probability of resistance and treatment outcomes using clinical prediction models with drug, patient, and pathogen characteristics.[@corbinPersonalizedAntibiogramsMachine2022] Its usefulness supporting holistic prescribing decisions, however, is hampered by the lack of a robust utility function, a mathematical equation to quantify the value of different antibiotic treatment options based on machine learning predictions and intuition derived from domain knowledge/experience.[@staderAlgorithmsDontHave2024,@walshUtilityFunctionsAutonomic2004] Antibiotic treatment suggestions using a utility function might give prescribers the confidence to use Access category antibiotics when it is safe to do so, while compromising on Access antibiotic use in situations where treatment efficacy needs to be prioritised (e.g., where risk of resistance and/or clinical deterioration from untreated infection is high). 

Here, we describe a urinary tract infection (UTI) antibiotic choice automation approach, built on a utility function that combines machine learning prediction of treatment outcomes with prescriber-informed outcome values/costs, and illness severity. The aims of this study are to firstly assess whether UTI treatment recommendations based on the utility function can successfully cover urinary pathogens using at least 70% Access category antibiotics, and secondly to assess whether recommendations adapt appropriately to prioritise organism coverage and intravenous antibiotics as illness severity increases. 

# Methods

## Ethics

The study complied with the PhysioNet MIMIC-IV dataset Data Use Agreement 1.5.0 and Health Data License. Approval was also obtained for a discrete choice experiment (an antibiotic ranking scenario task undertaken by prescribers) from the NHS Health Research Authority (HRA). A review was undertaken by a UK Research Ethics Committee (IRAS 330186), which determined that full ethics committee review was not required.

## Data sources and processing

The study required four datasets:

1. Urine culture data to train clinical prediction models to predict the probability of a specified antibiotic providing coverage of the urine pathogen grown, i.e., the probability that the urinary pathogen will be susceptible to that antibiotic.
2. Antibiotic prescription data to train clinical prediction models to predict the probability of *Clostridioides difficile* infection (CDI) and drug toxicity following exposure to a specified antibiotic.
3. A second set of urine culture data for patients presenting to the Emergency Department, to perform a microsimulation study comparing utility function antibiotic recommendations against those actually prescribed.
4. A set of antibiotic rankings from real-world clinicians who had performed a discrete choice experiment (an antibiotic ranking exercise in response to a survey with clinical UTI vignette).

Clinical prediction model training/testing/validation was performed using antibiotic prescribing and urine culture data from the open-source PhysioNet dataset MIMIC (Medical Information Mart for Intensive Care)-IV version 2.2, a pseudonymised inpatient and outpatient electronic healthcare record dataset for patients over the age of 18 who were admitted to intensive care or the emergency department between 2008 and 2019 at Beth Israel Deaconess Medical Center (BIDMC - Boston, MA) (<https://physionet.org/content/mimiciv/2.2/>).[@johnsonMIMICIVClinicalDatabase, @johnsonMIMICIVFreelyAccessible2023b, @goldbergerPhysioBankPhysioToolkitPhysioNet2000b] The microsimulation study was performed on a holdout dataset of the urine culture data. The full data preprocessing workflow is summarised in Appendix 3. Data preprocessing and quality checking was performed in a similar way across sociodemographic groups using R version 4.3.2 (2023-10-31), and followed an expanded version of the process used in our previous work using logistic regression models to personalise antimicrobial susceptibility testing.[@howardPersonalisedAntimicrobialSusceptibility2024, @rstudioref].

After data preprocessing, prescribing data and urine culture susceptibility data were available for 13 antibiotics (ampicillin, ampicillin-sulbactam, piperacillin-tazobactam, cefazolin, ceftriaxone, cefepime, meropenem, ciprofloxacin, gentamicin, trimethoprim-sulfamethoxazole, nitrofurantoin, and vancomycin). Antimicrobial susceptibility interpretations are likely to be based on Clinical Laboratory Standards Institute clinical breakpoints given the U.S. setting.[@patelUpdatingBreakpointsUnited2023] Sample size was determined by the size of the available datasets, and provided a sufficient number of cases per independent variable in the model to prevent overfitting.[@bramerAvoidingOverfittingDecision2007]

Microsimulation data was a holdout subset of the urine culture data for patients who attended the Emergency Department and were prescribed one or more of the 13 antibiotics on the same day. The 'acuity' variable indicating illness severity at triage was transformed from a 4-1 scale (mild to severe) to a 0-3 scale to facilitate the utility function.

Antibiotic financial cost was determined using the lowest procurement/tender award price for each agent in U.S. dollars as listed on the U.S. Department of Veterans Affairs National Acquisition Center (<https://www.vendorportal.ecms.va.gov/NAC/>) when accessed in November 2024 - these values were divided by the highest cost including combinations of antibiotics to produce normalised numbers between zero and one.[@supportVANationalAcquisition]

The discrete choice experiment provided weights ($w$) for the utility function. The experiment took the form of a survey that was completed online between June 1st 2024 and October 31st 2024 by UK-based antibiotic prescribers from general practice (GP), medicine, surgery, intensive care, and infectious diseases/medical microbiology, contacted through organisational and departmental single points of contact by email. Sample size was determined by the number of respondents in the 4-month survey period. No minimum sample size was prespecified, but the aim was to obtain at least some participants from each specialty.

The discrete choice experiment survey was a questionnaire (see Appendix 1) that posed 13 fictional antibiotics with six characteristics (AWaRe class, CDI risk, toxicity, UTI-specificity, oral and IV administration) - these numbers of fictional antibiotics and characteristics were chosen as a balance between the time taken for respondents to complete the task and providing sufficient differences between the antibiotic options to minimise collinearity.[@buddAdaptationWHOEssential2019] Participants were given a fictional UTI clinical scenario, then asked to rank the treatments in order of suitability.

## Utility function design

The utility function is a mathematical calculation that outputs a numerical choice utility value $U$ for each antibiotic option for each individual patient - this number represents the value of each antibiotic to that patient as a potential treatment choice. Utility is calculated in a way that is designed to mimic intuitive human choice making by considering the relative characteristics and possible consequences of available antibiotic treatments ($v$), the importance of those consequences (weights $w$), and a safety mechanism $S$[@zhurisk2021]. The utility function satisfies the following axioms:

1. The minimum possible antibiotic choice utility of an antibiotic is zero.
2. If the predicted probability that an antibiotic will cover a urinary pathogen is zero, antibiotic choice utility is zero.
3. If the predicted probability that an antibiotic will cover a urinary pathogen is one, variation in antibiotic choice utility will be determined by variation in antibiotic outcome probabilities, antibiotic characteristics, and/or illness severity.
4. The minimum illness severity score (e.g., National Early warning score [NEWS]) in a population is always zero, and as a patient's illness severity score  increases, the relative contributions of an intravenous treatment option and probability of urine pathogen coverage to antibiotic choice utility increase.

Antibiotic treatment choice utility ($U$) for a specified antibiotic ($x$) and a specified patient ($n$) is defined by:\

$$
U^{(x,n)} = p_s^{(x,n)}\left(P^{(x,n)}+C^{(x)}+S^{(x,n)}\right)
$$ {#eq-utility}
\

where $v_s$ is the probability of covering the patient's urinary pathogen and $v_s \in [0,1]$, $P$ is the utility of predicted antibiotic outcomes\

$$
P^{(x,n)} = u(w_c, v_c^{(x,n)}) + u(w_t, v_t^{(x,n)})
$$

$$
v_c \in [0,1] \quad \text{(Probability of } \textit{Clostridiodes difficile} \text{ infection)}
$$

$$
v_t \in [0,1] \quad \text{(Probability of antibiotic toxicity)}
$$
\
$C$ is the utility of known antibiotic characteristics\

$$
C^{(x)}=u(w_u,v_u^{(x)})+u(w_a,v_a^{(x)})+u(w_o,v_o^{(x)})+u(w_r,v_r^{(x)})+u(w_h,v_h^{(x)})
$$

$$
v_u \in \{0,1\} \quad \text{(UTI-specific agent)}
$$

$$
v_a \in \{0,1\} \quad \text{(WHO Access agent)}
$$
$$
v_o \in \{0,1\} \quad \text{(Oral administration option)}
$$

$$
v_r \in \{0,1\} \quad \text{(WHO Reserve agent)}
$$

$$
v_h \in [0,1] \quad \text{(Normalised agent cost)}
$$
\
$S$ is a safety mechanism for patients with severe infection, that exponentially increases the weight of intravenous treatment utility and probability of susceptibility as illness severity increases using the natural exponent\

$$
S^{(x,n)}= u(w_i,v_i^{(x)})e^{a(n)}b
$$

$$
v_i \in \{0,1\} \quad \text{(IV administration option)}
$$

$$
a ≥ 0 \quad \text{(Illness severity score)}
$$

$$
b ≥ 0 \quad \text{(Illness severity calibration value)}
$$
\
and the function $u$ ensures that the utility values for $P$, $C$, and $S$ are always positive by using the absence a characteristic, or the probability of an outcome not occurring, if $w$ is negative:\

$$
u(w, v) = 
\begin{cases}
    w & \text{if } w \geq 0 \\
    |w|(1-v) & \text{otherwise} \
\end{cases}
$$
\
Probability values for each antibiotic-patient combination $(x,n)$ are calculated using XGBoost models trained, tested and validated on MIMIC-IV urine antibiotic susceptibility data (for $v_s$) and antibiotic prescription data (for $v_c$ and $v_t$) as described in Appendix 3. Weights $w$ represent the importance of antibiotic characteristics and outcomes $v$, defined by their relative contributions to prescriber antibiotic choices (i.e., coefficients) in a logistic regression model (Appendix 4) trained on antibiotic ranking data from the discrete choice experiment (Appendix 1).

$a$ is an illness severity score chosen by the user (e.g., NEWS or the APACHE II score), and $b$ is an adjustment weight to calibrate the mechanism to the chosen severity score. The rationale for this approach as a safety mechanism $S$ is that more systemically unwell patients are more likely to have severe infection (e.g., sepsis), in which scenario the consequences of ineffective antibiotic therapy are more severe.[@buckmanEmpiricAntibioticsSepsis2018] 

## Microsimulation study

An individual-level simulation (microsimulation) study design was used to assess distributions of antibiotic utility values and projected outcomes of the decision algorithm in real-world data.[@DynamicMicrosimulationModels] For patients who presented to the Emergency Department, were prescribed antibiotics, and subsequently grew a pathogen in their urine, all 13 antimicrobial agents were ranked according to utility value for each patient to identify personalised treatment recommendations. A default illness severity adjustment weight ($b$) of one was used for the main analysis. These recommendations were compared to the real-world Emergency department antibiotic prescriptions made for each patient.

## Outcomes

The outcomes of interest were:

1.  The proportion of urine pathogens covered by WHO Access category, oral, intravenous, and overall simulated utility-based personalised UTI treatment recommendations.

2.  The number of Access and overall antibiotics in the top six recommendations per specimen that cover the urine pathogen.

Proportions from utility function recommendations were compared with those of antibiotics actually prescribed on the day of the urine specimen using a chi-squared test with a significance threshold of 5% and results reported as proportions for the two groups and 95% confidence interval.

Median numbers of susceptible results per specimen in the top six from the utility function recommendations were compared with a standard top six of nitrofurantoin, trimethoprim/sulfamethoxazole, gentamicin, piperacillin/tazobactam, ceftriaxone, and ciprofloxacin (based on a combination and WHO and European Society of Urology UTI treatment guidelines, as described in our previous work[@howardPersonalisedAntimicrobialSusceptibility2024, @EAUGuidelinesUrologicala, @WHOAWaReAccess]) using a Wilcoxon signed rank test (two-sample paired with continuity correction). Effect size was calculated by dividing the test Z statistic by square root of the total number of specimens.

## Sensitivity analyses

Sensitivity analyses were performed to assess how utility values and recommendations produced by the utility function changed in response to changes in parameter inputs (including edge cases where parameters had extreme values). Different clinical scenarios were assessed using the microsimulation study design, to observe changes in recommendations and pathogen coverage with second-line treatment recommendations (antibiotics with the second-highest treatment utility), 2-agent antibiotic combinations, improved probability predictions (simulated by taking the mean of the predicted probability and the actual outcome denoted by one or zero), and changing nitrofurantoin resistance rates.

# Results

## Participants

The characteristics of the MIMIC-IV urine culture and prescription datasets used to train clinical prediction models and perform the microsimulation study are summarised in Appendix 5. In the urine culture data, females were more prevalent than males (`r urt(desc_tab,"F")`), and 70-79 was the most prevalent age group (`r urt(desc_tab,"70-79")`). In the microsimulation subset of the urine culture data, patients most commonly had an intermediate illness severity score (1 or 2) - 2.9% (n=10) of patients had the lowest score (0) and 10.3% (n=35) had the highest (3). In the prescriptions dataset, 60-69 year olds were the most prevalent age group (`r abt(desc_tab,"60-69")`). The numbers of different antibiotic types prescribed in the prescription dataset are summarised in Appendix 6 - the most commonly-prescribed antibiotic was `r abt2(ab_tab,1)`, followed by `r abt2(ab_tab,2)`, then `r abt2(ab_tab,3)`, reflecting that the prescriptions dataset was restricted to inpatients and covered all clinical indications. 

49 prescribers completed the discrete choice experiment, 47 of whom were based in Liverpool. A total of 15 participants were from infection specialties (medical microbiology and infectious diseases), 11 were from other medical specialties (haemato-oncology, respiratory medicine, and acute medicine), nine were from surgical specialties (urology and general surgery), nine were from intensive care, and five were from general practice. The mean time taken to complete the ranking task was 9 minutes and 12 seconds. Antibiotic rankings varied between participants, but the same agent was ranked either first or second out of 13 by all participants - a UTI-specific Access-category agent with low cost and CDI/toxicity risk, orally but not intravenously-administrable.

## Clinical prediction models

Final training hyperparameters used for each clinical prediction model are summarised in Appendix 7, and predictor variable contributions to predictive performance are summarised in Appendix 8. The presence and/or absence of previously-detected resistance to an antibiotic in the last year was one of the largest contributors to predictive accuracy for urine pathogen susceptibility to that antibiotic in most models. Gender and age group were large contributors to antibiotic susceptibility predictive performance in all models. Hospital admission in the last year, age over 65, previous CDI, and previous acute kidney injury in the last year were among the largest contributors to predictive performance for both CDI and antibiotic toxicity.

Receiver operating characteristic (ROC) curves and performance metrics for models predicting single-antibiotic susceptibility, CDI, and toxicity in the single validation run on the validation dataset are summarised in Figure 2 and Table 1 respectively. ROC curves and performance metrics for models predicting susceptibility to 2-antibiotic combinations are summarised in Appendix 9 and Appendix 10 respectively. The model that predicted CDI following an antibiotic prescription had the highest predictive performance, with an AUROC of `r aucfilter(metrics_singles_table,"CDI")`. The model that predicted Ampicillin coverage of the urinary pathogen had the lowest predictive performance, with an AUROC of `r aucfilter(metrics_singles_table,"Ampicillin")`. Of the 13 other prediction models, 10 produced AUROCs between 0.7 and 0.8, and 3 between 0.65 and 0.7 (ampicillin/sulbactam, gentamicin, and trimethoprim/sulfamethoxazole).

```{r, echo=FALSE,message=FALSE,warning=FALSE}

knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/roc_plots_main.pdf")
  
```

Figure 2: ROC curves for probability predictions made for single-antibiotic susceptibility, *C. difficile* infection (CDI), and toxicity on the validation dataset.\

```{r, echo=FALSE,message=FALSE,warning=FALSE}

metrics_singles_table <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/metrics_singles_table.csv")

knitr::kable(metrics_singles_table)

```

Table 1: Model performance metrics for prediction of single-antibiotic susceptibility, CDI, and antibiotic toxicity in the single validation run on the validation dataset. 95% confidence intervals are displayed in parentheses.\

Performance metrics from the small training dataset stability analysis are summarised in Appendix 11. The largest difference in mean AUROC across six model train-test iterations was observed between the 2% and 12% training datasets in the CDI prediction model (0.132, 0.631 versus 0.763), and the largest AUROC standard deviation was observed in the 2% dataset in the CDI prediction model (0.025).

Performance metrics from the year group cluster analyses are summarised in Appendix 12. For all models and all year groups, mean AUROC across six train-test iterations was highest in the same year group upon which the model had been trained. The largest difference in AUROC between year groups was observed for the toxicity prediction model between 2011-2013 training, 2011-2013 testing and 2011-2013 training, 2014-2016 testing (0.257, 0.880 versus 0.623). The largest AUROC standard deviation was observed for the CDI model with 2008-2010 training, 2011-2013 testing (0.091).

Performance metrics from the model fairness analyses are summarised in Appendix 13. The largest difference in mean AUROC across six model train-test iterations in the age fairness analysis was observed between the 40-49 and 80-89 age groups for piperacillin-tazobactam susceptibility prediction (0.136, 0.831 versus 0.695), and the largest AUROC standard deviation was observed for CDI prediction in the over 90s age group (0.077). The largest difference in mean AUROC across six model training iterations in the race fairness analysis was observed between Hispanic patients and the aggregate group containing the least prevalent local races (i.e., not Asian, black, or white) for ciprofloxacin prediction (0.093, 0.738 versus 0.646), and the largest AUROC standard deviation was observed in Asian patients for CDI prediction (0.078). The largest difference in mean AUROC across six model training iterations in the remaining characteristics was observed between females and males - this difference was most marked in susceptibility prediction models for cephalosporins, meropenem, and gentamicin, with the largest difference in mean AUROC observed for meropenem (0.102, 0.727 versus 0.625), and the largest AUROC standard deviation observed in piperacillin-tazobactam susceptibility prediction for males (0.023).

## Discrete choice experiment

The coefficients from the ranked logit analysis of the discrete choice experiment across all specialties are displayed in Figure 3, and the coefficients by individual specialty are displayed in Appendix 14. Overall, an antibiotic being specific to urinary tract infection in its licensed indication appeared to have the most positive effect on its probability of selection in the discrete choice experiment, and high toxicity risk the greatest negative effect on its probability of selection. High antibiotic cost appeared to have the least effect on probability of antibiotic selection, exhibiting a minimal positive effect with the approximated 95% confidence interval crossing the line of no effect.\

```{r, echo=FALSE,message=FALSE,warning=FALSE}

knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/ORplot.pdf")

```

Figure 3: Coefficients from the ranked logit analysis of the discrete choice experiment across all prescriber specialties.\

General practitioners and infection specialists were more likely to select antibiotics with oral routes of administration, and less likely to select antibiotics with intravenous routes of administration - the opposite was observed in intensive care and medical specialty prescribers, where intravenous routes of administration were preferred over oral routes. Routes of administration appeared to have less bearing on choice in surgical specialties than in other specialties. In medical specialties and intensive care, an antibiotic being in the WHO Access category most increased the probability of selection. Intensive care was the only specialty in which an antibiotic being in the WHO Reserve category reduced the probability of selection more than high toxicity risk. Wide confidence intervals for coefficients estimated from general practitioners reflected the low numbers of respondents from that prescriber group (n=5).

When coefficients were used as weights to calculate specialty-specific utilities for each agent on the microsimulation dataset (Appendix 15), nitrofurantoin had the highest median utility in all specialties except intensive care, where gentamicin had the highest median utility. Gentamicin had the second-highest median utility in all specialties except intensive care (piperacillin-tazobactam), and general practice where the top four agents all had oral routes of administration (nitrofurantoin, ampicillin-sulbactam, trimethoprim/sulfamethoxazole, and ciprofloxacin).

## Microsimulation study

The distributions of single-antimicrobial choice utility values for patients across the microsimulation dataset are displayed in Figure 4, The distributions of single-agent utility values stratified by prescriber types are displayed in Appendix 15, and the distribution of all antibiotic options including 2-agent combinations are displayed in Appendix 16.\

```{r, echo=FALSE,message=FALSE,warning=FALSE}
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/utility_Treatment_ (single agent).pdf")
```

Figure 4: Distributions of antimicrobial choice utility values for patients across the microsimulation dataset.\

Nitrofurantoin had the highest median utility across the population (`r utilsum(util_probs_df,1,"median")`). For single-agent treatment, four of the six antibiotics with the highest median utility were WHO Access agents (nitrofurantoin, gentamicin, ampicillin/sulbactam, and trimethoprim/sulfamethoxazole) and two were Watch agents (piperacillin/tazobactam and ciprofloxacin). The lowest placed WHO Access antibiotic was ampicillin (or amoxicillin), which placed 12th out of 13 antibiotics. Vancomycin had the lowest median utility across the population (`r utilsum(util_probs_df,13,"median")`). The widest spread in utility values was observed for cefazolin ( IQR `r utilsum(util_probs_df,1,"IQR")`), reflecting the fact that predicted probability of susceptibility to cefazolin varied the most across the population (IQR `r round(wideiqr,3)`).

Nitrofurantoin was the highest-placed agent for all prescriber specialties in terms of median utility across the population, and the placement of other agents was more variable. The largest differences observed between antibiotic utility values were between general practice and intensive care – agents with oral routes of administration ranked higher in the former, while those with intravenous routes of administration ranked higher in the latter. When two-agent combinations were included in the general analysis, ampicillin plus gentamicin became the second-placed treatment option in terms of median utility across the population (behind nitrofurantoin), meropenem plus vancomycin the third, and piperacillin-tazobactam plus ciprofloxacin the fourth.

## Main outcomes

Compared to antibiotics actually prescribed, the utility function recommendation successfully covered the urinary pathogen in more cases overall `r chi_all`, with an Access antibiotic in more cases `r chi_acs`, an oral antibiotic in more cases `r chi_orals`, and an intravenous antibiotic in fewer cases `r chi_ivs`.

The proportion of utility function first-line recommendations and antibiotics actually prescribed that covered the urinary pathogen grown across a range of illness severity scores are displayed in Figure 5, and the associated distributions of antibiotic recommendations across this range is displayed in Figure 6. The utility function broadly mimicked the prescribing behaviour seen in the actual dataset, with Access and oral antibiotics becoming deprioritised in favour of intravenous Watch category agents in patients with more severe illness at presentation - this allowed the utility function to maintain a slightly higher coverage of a higher proportion of urinary pathogens (`r glue("{round(perc_util,1)}%")`) at the highest illness severity score than antibiotics actually prescribed in the dataset (`r glue("{round(perc_actual,1)}%")`).

At the lowest illness severity score (0), nitrofurantoin was both the commonest first-line utility function treatment recommendation (`r lowabx(pdrx)`) and the commonest antibiotic actually prescribed (`r lowabx(pdrx_px_abx)`). As illness severity increased, utility function recommendations for nitrofurantoin were replaced by recommendations for gentamicin, ampicillin/sulbactam, and piperacillin/tazobactam. Piperacillin/tazobactam was the commonest utility function first-line recommendation at the highest illness severity (`r hiabx(pdrx)`). The commonest actual Emergency Department dataset prescriptions changed from nitrofurantoin to ceftriaxone with increasing illness severity score, then to piperacillin/tazobactam and vancomycin at maximum severity (`r hiabx(pdrx_px_abx)`). 

```{r, echo=FALSE,message=FALSE,warning=FALSE}
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of WHO Access agents)_susplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an oral option)_susplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_recommended according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/overall _MEWS_actually prescribed according to illness severity\n(proportion of antibiotics with an IV option)_susplot.pdf")
```

Figure 5: The proportion of organisms subsequently grown in urines that were covered by the utility function first-line antibiotic treatment recommendation (left) and actual prescriptions from the dataset (right) depending on illness severity, with the proportion of Access category agents (top), agents with oral routes of administration (middle), and agents with intravenous routes of administration (bottom) providing coverage also indicated. The UNGA 70% Access agent target is displayed as a green dotted line on the top plots.\

```{r, echo=FALSE,message=FALSE,warning=FALSE}
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot_px_abx.pdf")

```

Figure 6: The make-up of utility function first-line treatment recommendations by antibiotic agent depending on illness severity.\

Median predicted CDI probability of utility function first-line recommendations was `r ifelse(zeroprob(cdi_df)<0.001,'<0.001',zeroprob(cdi_df))` at the minimum illness severity score, and `r ifelse(maxprob(cdi_df)<0.001,'<0.001',maxprob(cdi_df))` at the highest illness severity score, compared to `r ifelse(zeroprob(cdi_df_px_abx)<0.001,'<0.001',zeroprob(cdi_df_px_abx))` and `r ifelse(maxprob(cdi_df_px_abx)<0.001,'<0.001',maxprob(cdi_df_px_abx))` respectively in antibiotics actually prescribed. Median predicted toxicity probability of first-line recommendations was `r zeroprob(tox_df)` at the minimum illness severity score and `r maxprob(tox_df)` at the maximum illness severity score, compared to `r zeroprob(tox_df_px_abx)` and `r maxprob(tox_df_px_abx)` in antibiotics actually prescribed. Median U.S. cost of utility function first-line recommendations was \$`r zeroprob(cost_df)` at the minimum illness severity score and \$`r maxprob(cost_df)` at the maximum illness severity score, compared to \$`r zeroprob(cost_df_px_abx)` and \$`r maxprob(cost_df_px_abx)` respectively for agents actually prescribed.\

The number of susceptible results provided by the top six treatment recommendations from the utility function and standard panel are displayed in Appendix 17. The top six utility function recommendations contained more Access antibiotics that covered the urinary pathogen than the standard panel `r wil_acs`, but fewer antibiotics overall that covered the urinary pathogen `r wil_all`.

## Sensitivity analyses

Line plots verifying the utility function's outputs in response to changing individual utility function parameters in turn are displayed in Appendix 18. Second-line utility function treatment recommendations (Appendix 19) were able to maintain a consistently higher level of urine pathogen coverage with increasing illness severity than first-line recommendations, and a higher proportion of Access antibiotic use - however, this effect was due to the use of gentamicin so there were fewer oral treatment options at intermediate illness severity. Utility function recommendations that included 2-agent combinations (Appendix 20) further improved urinary pathogen coverage, with a high proportion of Access antibiotic use and coverage consistently increasing in line with illness severity score - this effect was largely due to ampicillin and gentamicin combination therapy. Artificially improving the accuracy of probability predictions (Appendix 21) provided the highest level of coverage across all illness severity scores, with the proportion of intravenous agents and Watch agents still increasing with increasing illness severity but trimethoprim-sulfamethoxazole being using more than in the primary microsimulation analysis. 

Sequentially increasing the illness severity score of the whole population in parallel (Appendix 22) resulted in a rise in urine pathogen coverage as illness severity increased, likely reflecting that patients with the highest illness severity had higher rates of resistant pathogens than those with the lowest illness severity rates (`r t3` versus `r t0`). Increasing median nitrofurantoin predicted resistance probability (Appendix 23) slightly reduced the proportion of urine pathogens covered at the lowest illness severity, and resulted in an increased reliance on the intravenous antibiotic gentamicin.

When extreme discrete choice experiment results were simulated (Appendix 24) oral antibiotics appropriately scored higher and more expensive antibiotics scored lower, with ciprofloxacin exhibiting the highest median utility value. An unanticipated effect was a strongly negative ranked logit coefficient for UTI-specificity, resulting in a low median utility value for nitrofurantoin. To address suspected collinearity as a cause for this phenomenon, UTI-specificity was removed from one antibiotic option with an oral route of administration and added to an antibiotic without an oral route of administration – this action resolved the effect and resulted in a positive coefficient value for UTI-specificity (Appendix 25).\

# Discussion

This study shows that antibiotic decision making for individual patients can be made more empirical and systematic by using an algorithmic utility function built on clinical prediction modelling, prescriber discrete choice experiments, and measures of illness severity. This automation could help safely maximise the use of WHO Access category antibiotics in clinical practice while minimising the risk of clinical failure due to resistance. Where illness severity is very low, our algorithm behaves much like a fixed antimicrobial formulary, where patients with uncomplicated lower UTI are recommended nitrofurantoin. However, the algorithm is able to provide more nuance than an antimicrobial formulary as illness severity increases, progressively compromising on the use of Access agents to reduce the probability of clinical failure and prioritise agents that can be administered intravenously.

Our algorithm can safely navigate antibiotic decision making for three reasons: firstly, clinical prediction modelling is likely to provide more objective estimates of the probability of antibiotic outcomes than clinicians who can be vulnerable to psychological phenomena such as the availability heuristic (where the gravity of events influences perception of their probability); secondly, the algorithm leverages the experience of real-world prescribers by quantifying how important they perceive different factors to be in a theoretical scenario where they can be more objective; and thirdly, the utility function is constructed to weight intravenous antibiotics and probability of susceptibility more heavily as patients become more unwell, allowing the algorithm to replicate a key aspect of clinical judgement in antibiotic prescribing – weighing the risks of untreated infection vs antibiotic-related harms and AMR generation.

We envisage the algorithm result being presented to the clinician at the point of ordering a urine culture test. The utility of different antibiotic options can be calculated using probability predictions based on the patient’s prior healthcare data, importance weights from a local discrete choice experiment, and a locally relevant illness severity score (e.g., National Early Warning Score \[NEWS\] in the UK). The top three antibiotics can then be communicated to the clinician through the test ordering interface as first, second, and third-line recommendations, and the top six antibiotics are chosen for susceptibility testing. For this to be done safely, local calibration of the utility function to the chosen illness severity score will need to be performed with input from expert prescriber stakeholders by tweaking the built-in severity weight and gauging its effect with the sensitivity analysis displayed in Figure 5 – this will ensure that coverage rates are acceptable to local users of the algorithm (e.g., a coverage of at least 90% may be desired once a patient’s NEWS is 5 or above). The algorithm could also be easily adapted to account for known antibiotic allergies and other contraindications when making prescribing recommendations – this is not done in this study because reliable allergy information is not available in the dataset.

Subsetting the discrete choice experiment by specialty highlights that the utility function can and should be adapted for the setting in which it will be used to direct prescribing decisions. The experiment reveals, for example, that intensive care physicians have different needs and priorities to general practitioners when presented with the UTI clinical scenario. Cost is not a high priority for any prescribers in this study, but in low and middle income countries (LMICs) this may be given a much higher weight by local prescribers in the discrete choice experiment, and therefore in the prescribing decisions it informs. A lack of digital infrastructure in LMICs may provide a barrier to the implementation of personalised algorithmic prescribing decisions, but the utility function approach may also be useful for population-level and policy-level decisions (e.g. informing LMIC formularies or directing antibiotic supply chains).

The microsimulation approach in this study helps gauge the performance of the algorithm in a more meaningful way than metrics such as AUROC alone. The fact that the decision algorithm is unable to provide a higher probability of organism coverage for very unwell patients than piperacillin-tazobactam (the antibiotic in the study with the highest probability of coverage of organisms grown) shows that the algorithm’s susceptibility probability predictions may not be able to detect rare resistance with sufficient sensitivity to provide additional benefit over a ‘one-size-fits-all’ approach in the most unwell patients. When probability predictions are artificially improved, the performance of the algorithm also improves in recommending an antibiotic that is more likely to cover the organism grown from patients at all levels of illness severity.

Another benefit of improving predictions could be greater fairness. Our fairness analysis shows that AUROCs are lower for males when predicting susceptibility to several antibiotics. Because a classification approach is not used here, methods to resolve this such as decision threshold modification are not possible – our algorithm instead weights probability predictions by their AUROCs so that agents with higher prediction probability confidence are prioritised. The most effective way to improve fairness, however, would be more data collection from under-represented groups – predictions are likely to be poorer in males because UTI is less common in that cohort, so they are less well-represented in the training dataset. More data collection may also help to improve performance in different and time periods and geographical cohorts – probability predictions in this study are worse when models are trained on one time period and tested on another, reflecting how AMR constantly changes over time.

The algorithm adapts to different resistance rates. When nitrofurantoin resistance probabilities are increased in the sensitivity analysis, the algorithm begins to select alternative antibiotics to maintain the probability of urine pathogen coverage - one of these antibiotics, however, is gentamicin, which is not a feasible option for patients with uncomplicated UTI in the community, for example. This illustrates another benefit of performing the discrete choice experiment in the setting of implementation to ensure that those practical considerations feed through into the utility calculations.

An assumption made in the main analyses of this study is that a single antibiotic is preferable as empirical treatment. It is possible, however, that as AMR increases globally, combination regimens may become increasingly desirable and/or necessary – this is already reflected in some treatment guidelines, particularly where allergies and other drug contraindications make achieving adequate empirical coverage with a single antibiotic difficult. In this study, the decision algorithm is able to achieve higher rates of coverage than universal piperacillin-tazobactam treatment once combinations of agents are included, often using only Access agents (ampicillin and gentamicin). Predicting outcomes from antibiotic combinations using retrospective real-world data is challenging, due to its relative rarity in many settings - the benefit of using an adaptive approach with up-to-date real-world data, however, is that algorithmic decisions should further improve if combination therapy becomes more common.

When confronted with an extreme scenario (an ‘edge case’) where 1,000 sets of discrete choice experiment rankings were identical and all favoured oral administration options, the utility function responds appropriately by prioritising oral antibiotics at the expense of all other considerations but unexpectedly deprioritises UTI-specificity. The probable reason for this phenomenon is that all options in the discrete choice experiment that were UTI-specific also had oral options, resulting in strong collinearity in the model. When this collinearity was reduced by retrospectively changing the characteristics of two antibiotic options, the UTI-specificity coefficient was more as expected. In future work, an expanded panel of antibiotic options should be considered to enable more variation in characteristics to reduce collinearity – however, a strength of our survey was its brevity, so any expansion should be balanced against the effect of time taken to complete the survey on anticipated response rates.

Our study has several limitations: firstly, the urine dataset is limited to secondary care patients, the prescription dataset to inpatients only, and the microsimulation dataset is limited to the Emergency Department. Given that the benefits of the algorithm are likely to be highest in primary care where most antibiotic prescribing occurs, the approach needs to be validated in this setting. Secondly, although the microsimulation approach can indicate how recommendations would have covered organisms grown here, it cannot determine whether recommendations would have been followed, or examine potential outcomes in instances of UTI where organisms are not grown. There were also insufficient data about antibiotic contraindications to determine whether recommendations could have been followed in all instances, but our analysis suggests that second-line options would also have provided good urinary pathogen coverage with a high use of Access and oral agents. The algorithm needs to be validated in a clinical study with appropriate outcomes that incorporate health economic analyses to best ascertain overall patient and population impact. Thirdly, the number of respondents to the discrete choice experiment is the lowest in the general practitioner group, which may reflect that this cohort are among the busiest and therefore do not have time to undertake a survey. Paradoxically, it is these specialty cohorts in which a decision support algorithm may have the most benefit, so further work is required to understand how best to engage busy clinicians in qualitative-quantitative study approaches.

Despite these limitations, this study demonstrates how an innovative algorithmic decision approach that constructs a utility function from quantification of the key considerations for antimicrobial prescribing decisions (namely probability of different outcomes, the importance of different outcomes, and the consequences of inaccurate predictions) could help countries achieve the WHO target of 70% Access category antibiotic prescribing by 2030 in a way that does not endanger clinical efficacy where it matters most - in severely ill patients at high risk of deterioration from sepsis. Further research is required in a clinical study across multiple geographical areas to better understand the impact of our utility function decision algorithm on individual and population outcomes.

# References

::: {#refs}
:::

## Funding

This research was funded in part by the Wellcome Trust grant ref: 226691/Z/22/Z. For the purpose of open access, the author has applied a CC BY public copyright licence to any Author Accepted Manuscript version arising from this submission. Office for Life Sciences Data-Action Accelerator award also supported this work. The funders had no role in the conceptualisation, design, data collection, analysis, decision to publish or preparation of the manuscript.

## Conflicts of interest

Alex Howard declares personal consulting work for Pfizer outside the submitted work, and a donation from Pfizer to the University of Liverpool for a public and professional engagement project outside the submitted work.

## Data sharing

The MIMIC-IV version 2.2 data set is publicly accessible as a credentialed PhysioNet user at https://physionet.org/content/mimiciv/2.2/ once mandated training is completed, and the data use agreement is signed. Additional aggregate-level data can be provided by the authors if requests to do so are in line with legal and ethical data use regulations. Open-source code written for this study will be made available upon publication.

## Code sharing

Open-source code to reproduce the study using the above dataset is available at <https://github.com/amh312/Antimicrobial_utility>.

## Contributions

AH conceived the study, performed data engineering and mathematical modelling, and wrote the manuscript including diagrams.

## Acknowledgements

**Permissions from survey participants required**
