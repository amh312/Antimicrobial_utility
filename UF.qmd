---
title: "A utility function for antibiotic decision support systems: a simulation study"
format:
  docx:
    reference-doc: doc_template.docx
bibliography: UF_references.bib
csl: /Users/alexhoward/Zotero/styles/the-lancet-infectious-diseases.csl
editor: visual
---

```{r, echo=FALSE,message=FALSE,warning=FALSE}

##Packages
library(tidyverse)
library(knitr)
library(glue)
library(scales)
library(coin)
library(rlang)

##Read-in
ur_util <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/ur_util_manuscript.csv")
util_probs_df <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/util_probs_df_manuscript.csv")
desc_tab <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/uf_desctab.csv")
urines5 <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/urines5.csv")
abx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/interim_abx.csv")
ab_tab <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/ab_tab.csv")
metrics_singles_table <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/metrics_singles_table.csv")
prim <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_xg_plot_df.csv")
pdrx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/abplot_df.csv")
pdrx_px_abx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/abplot_df_px_abx.csv")
cdi_df<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cdi_df.csv")
tox_df<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/tox_df.csv")
cost_df<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cost_df.csv")
cdi_df_px_abx<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cdi_df_px_abx.csv")
tox_df_px_abx<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/tox_df_px_abx.csv")
cost_df_px_abx<- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/cost_df_px_abx.csv")
stabmets <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_stability_metrics.csv")
timemets <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_time_sens_metrics.csv")
fairmets <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_fairness_metrics.csv")
overall_xg_plot_df <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_xg_plot_df.csv")
overall_xg_plot_df_px_abx <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/overall_xg_plot_df_px_abx.csv")

urt <- function(df,subtype) {
  
  urtot1 <- desc_tab %>% filter(Subtype==subtype) %>% select(`Urine model n (%)`)
    urtot1 <- sub(" .*", "",urtot1) %>% as.numeric()
    urtot2 <- desc_tab %>% filter(Subtype==subtype) %>% select(`Urine microsimulation n (%)`)
    urtot2 <- sub(" .*", "",urtot2) %>% as.numeric()
    
    littot <- urtot1+urtot2
    bigtot <- nrow(urines5)+nrow(ur_util)
    
    perc <- ((littot/bigtot)*100) %>% round(1) %>% format(nsmall=1)
    
    glue("{perc}%, n={(littot) %>% comma()}")

}
abt <- function(df,subtype) {
  
  urtot1 <- desc_tab %>% filter(Subtype==subtype) %>% select(`Prescription model n (%)`)
    urtot1 <- sub(" .*", "",urtot1) %>% as.numeric()
    
    bigtot <- nrow(abx %>% distinct(subject_id))
    
    perc <- ((urtot1/bigtot)*100) %>% round(1) %>% format(nsmall=1)
    
    glue("{perc}%, n={(urtot1) %>% comma()}")

}
abt2 <- function(df,numb) {
  
  abname <- df %>% dplyr::slice(numb) %>% select(`Antibiotic(s)`) %>% unlist()
  urtot1 <- df %>% dplyr::slice(numb) %>% select(`n (%)`) %>% unlist()
  urtot1 <- sub(" .*", "",urtot1) %>% as.numeric()
    
    bigtot <- nrow(abx)
    
    perc <- ((urtot1/bigtot)*100) %>% round(1) %>% format(nsmall=1)
    
    glue("{abname %>% tolower()} ({perc}%, n={(urtot1) %>% comma()})")

}
lowsev <- function(df,subtype) {
  
  perc_overall <- df %>% filter(Metric==subtype)
  perc_overall <- perc_overall %>% dplyr::slice(1) %>% select(Percentage) %>% unlist() %>% 
    round(1)
  
  n_overall <- round(nrow(ur_util)*(perc_overall/100)) %>% comma()
  
  glue("{perc_overall %>% format(nsmall=1)}% (n={n_overall})")
  
}
hisev <- function(df,subtype) {
  
  perc_overall <- df %>% filter(Metric==subtype)
  perc_overall <- perc_overall %>% dplyr::slice(nrow(perc_overall)) %>% select(Percentage) %>% unlist() %>% round(1)
  
  n_overall <- round(nrow(ur_util)*(perc_overall/100)) %>% comma()
  
  glue("{perc_overall %>% format(nsmall=1)}% (n={n_overall})")
  
}
lowabx <- function(df) {
  perc <- df %>% filter(`Illness severity`==0) %>% arrange(desc(`Percentage of first-line recommendations`)) %>%
    dplyr::slice(1) %>% select(`Percentage of first-line recommendations`) %>% 
  unlist() %>% round(1)
  
  numb <- round(nrow(ur_util)*(perc/100)) %>% comma()
  
  glue("{perc %>% format(nsmall=1)}%, n={numb}")
  
}
hiabx <- function(df) {
  perc <- df %>% filter(`Illness severity`==max(df$`Illness severity`)) %>% arrange(desc(`Percentage of first-line recommendations`)) %>%
    dplyr::slice(1) %>% select(`Percentage of first-line recommendations`) %>% 
  unlist() %>% round(1)
  
  numb <- round(nrow(ur_util)*(perc/100)) %>% comma()
  
  glue("{perc %>% format(nsmall=1)}%, n={numb}")
  
}
zeroprob <- function(df) {
  df %>% dplyr::slice(1) %>% select(med) %>% round(3) %>% unlist()
}
maxprob <- function(df) {
  df %>% dplyr::slice(nrow(df)) %>% distinct(med) %>% select(med) %>% round(3) %>% unlist()
}
aucfilter <- function(df,model,fullthing=FALSE) {
  
  if (fullthing==TRUE) {
  
  df %>% filter(Model==model) %>% select(AUROC) %>% unlist() %>% str_replace("\\(","\\(95% confidence interval [CI] ")
    
  } else {
    
    df %>% filter(Model==model) %>% select(AUROC) %>% unlist() %>% str_replace("\\(","\\(CI ")
    
  }
}
utilsum <- function(df,sliceval,type="median",thefirst=FALSE) {

  if (type=="median") {
top <- util_probs_df %>% filter(Antimicrobial %in%
                                  names(singles_map)) %>% group_by(Antimicrobial) %>% summarise(
  medvals=median(U),
  iq1=quantile(U)[2],
  iq3=quantile(U)[4]
) %>% ungroup() %>% arrange(desc(medvals)) %>% 
  dplyr::slice(sliceval) 

medval <- round(top %>% select(medvals) %>% unlist(),3)
iq1 <- round(top %>% select(iq1) %>% unlist(),3)
iq3 <- round(top %>% select(iq3) %>% unlist(),3)

if (thefirst==FALSE) {

glue("{medval}, IQR {iq1}-{iq3}")
  
} else {
  
  glue("{medval}, interquartile range [IQR] {iq1}-{iq3}")
  
}

  } else {
    
    glue("{round(df %>% filter(Antimicrobial %in%
                                  names(singles_map)) %>% group_by(Antimicrobial) %>% summarise(
  medvals=median(U),
  iq1=quantile(U)[2],
  iq3=quantile(U)[4]
) %>% ungroup() %>% mutate(iqr=iq3-iq1) %>% arrange(desc(iqr)) %>% 
  dplyr::slice(1) %>% select(iqr) %>% unlist(),3)}")
    
  }
}

###Reference lists
all_singles <- c("AMP","SAM","TZP","CZO","CRO","CAZ","FEP",
                 "MEM","CIP","GEN","SXT","NIT","VAN")
ab_singles <- all_singles
all_combos <- combn(all_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_abs <- c(all_singles,all_combos)
iv_singles <- c("AMP","SAM","TZP","CIP","FEP","CAZ","CRO","CZO","MEM",
                "GEN","SXT","VAN")
iv_ab_singles <- iv_singles
iv_combos <- combn(iv_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_ivs <- c(iv_singles, iv_combos)
oral_singles <- c("AMP","SAM","CIP",
                  "SXT","NIT")
oral_ab_singles <- oral_singles
oral_combos <- combn(oral_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_orals <- c(oral_singles, oral_combos)
access_singles <- c("AMP","SAM","GEN",
                    "SXT","NIT","CZO")
access_combos <- combn(access_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_access <- c(access_singles, access_combos)
watch_singles <- c("CRO","CAZ","FEP","MEM","TZP","CIP","VAN")
watch_combos <- combn(watch_singles, 2, FUN = function(x) paste(x, collapse = "_"))
all_watch <- c(watch_singles, watch_combos)
antimicrobial_map <- c(
  "Ampicillin" = "AMP",
  "Ampicillin-sulbactam" = "SAM",
  "Piperacillin-tazobactam" = "TZP",
  "Cefazolin" = "CZO",
  "Ceftriaxone" = "CRO",
  "Ceftazidime" = "CAZ",
  "Cefepime" = "FEP",
  "Meropenem" = "MEM",
  "Ciprofloxacin" = "CIP",
  "Gentamicin" = "GEN",
  "Trimethoprim-sulfamethoxazole" = "SXT",
  "Nitrofurantoin" = "NIT",
  "Vancomycin" = "VAN"
)
map_combinations <- combn(names(antimicrobial_map), 2, simplify = FALSE)
combined_antimicrobial_map <- c(
  antimicrobial_map,
  setNames(
    lapply(map_combinations, function(x) paste(antimicrobial_map[x], collapse = "_")),
    sapply(map_combinations, function(x) paste(x, collapse = " & "))
  )
)
singles_map <- combined_antimicrobial_map[combined_antimicrobial_map%in%all_singles]
iv_singles_map <- combined_antimicrobial_map[combined_antimicrobial_map%in%iv_singles]
oral_singles_map <- combined_antimicrobial_map[combined_antimicrobial_map%in%oral_singles]
modified_abx_map <- combined_antimicrobial_map
names(modified_abx_map) <- str_replace_all(names(modified_abx_map),
                                           " & ", "_")
iv_modified_abx_map <- modified_abx_map[modified_abx_map%in%all_ivs]
oral_modified_abx_map <- modified_abx_map[modified_abx_map%in%all_orals]
access_modified_abx_map <- modified_abx_map[modified_abx_map%in%all_access]

##S IQR for cefazolin
wideiqr <- util_probs_df %>% group_by(Antimicrobial) %>% 
  summarise(iqr=IQR(S)) %>% arrange(desc(iqr)) %>% 
  dplyr::slice(1) %>% select(iqr) %>% unlist()

##Counting instances of resistance
res <- ur_util %>% filter(acuity==3) %>% select(AMP:VAN)
res[res=="R"|res=="NT"] <- "1"
res[res=="S"|res=="I"] <- "0"
res <- res %>% mutate(across(everything(),as.numeric))
n3 <- sum(res)
p3 <- round((n3/(ncol(res)*nrow(res)))*100,1)
res2 <- ur_util %>% filter(acuity==0) %>% select(AMP:VAN)
res2[res2=="R"|res2=="NT"] <- "1"
res2[res2=="S"|res2=="I"] <- "0"
res2 <- res2 %>% mutate(across(everything(),as.numeric))
n0 <- sum(res2)
p0 <- round((n0/(ncol(res2)*nrow(res2)))*100,1)
t0 <- glue("{p0}% of results, n={n0}")
t3 <- glue("{p3}% of results, n={n3}")

##Chi-squared tests for proportions of first-line coverage
n_all <- c(nrow(ur_util), nrow(ur_util))

###All antibiotics
x_all <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I"))), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I"))))
perc_all1 <- round(prop.test(x_all, n_all)$estimate[1], 3)*100
perc_all2 <- round(prop.test(x_all, n_all)$estimate[2], 3)*100
p2_all <- round(prop.test(x_all, n_all)$p.value, 3)
ci1_all <- round(prop.test(x_all, n_all)$conf.int[1], 3)*100
ci2_all <- round(prop.test(x_all, n_all)$conf.int[2], 3)*100

chi_all <- glue("({perc_all1}% of cases versus {perc_all2}%, 95% confidence interval of difference [CID] {ci1_all}% to {ci2_all}%, p{ifelse(p2_all<0.001,'<0.001',paste0('=',p2_all))})")

##Access antibiotics
x_acs <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I")&PDRx_1%in%access_singles)), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I")&Px_Abx%in%access_modified_abx_map)))
perc_acs1 <- round(prop.test(x_acs, n_all)$estimate[1], 3)*100
perc_acs2 <- round(prop.test(x_acs, n_all)$estimate[2], 3)*100
p2_acs <- round(prop.test(x_acs, n_all)$p.value, 3)
ci1_acs <- round(prop.test(x_acs, n_all)$conf.int[1], 3)*100
ci2_acs <- round(prop.test(x_acs, n_all)$conf.int[2], 3)*100

chi_acs <- glue("({perc_acs1}% versus {perc_acs2}%, CID {ci1_acs}% to {ci2_acs}%, p{ifelse(p2_acs<0.001,'<0.001',paste0('=',p2_acs))})")

###Oral antibiotics
x_orals <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I")&PDRx_1%in%oral_singles)), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I")&Px_Abx%in%oral_modified_abx_map)))
perc_orals1 <- round(prop.test(x_orals, n_all)$estimate[1], 3)*100
perc_orals2 <- round(prop.test(x_orals, n_all)$estimate[2], 3)*100
p2_orals <- round(prop.test(x_orals, n_all)$p.value, 3)
ci1_orals <- round(prop.test(x_orals, n_all)$conf.int[1], 3)*100
ci2_orals <- round(prop.test(x_orals, n_all)$conf.int[2], 3)*100

chi_orals <- glue("({perc_orals1}% versus {perc_orals2}%, CID {ci1_orals}% to {ci2_orals}%, p{ifelse(p2_orals<0.001,'<0.001',paste0('=',p2_orals))})")

###IV antibiotics
x_ivs <- c(nrow(ur_util %>% filter((PDRx_1_result=="S"|PDRx_1_result=="I")&PDRx_1%in%iv_singles)), nrow(ur_util %>% filter((Px_Abx_result=="S"|Px_Abx_result=="I")&Px_Abx%in%iv_modified_abx_map)))
perc_ivs1 <- round(prop.test(x_ivs, n_all)$estimate[1], 3)*100
perc_ivs2 <- round(prop.test(x_ivs, n_all)$estimate[2], 3)*100
p2_ivs <- round(prop.test(x_ivs, n_all)$p.value, 3)
ci1_ivs <- round(prop.test(x_ivs, n_all)$conf.int[1], 3)*100
ci2_ivs <- round(prop.test(x_ivs, n_all)$conf.int[2], 3)*100

chi_ivs <- glue("({perc_ivs1}% versus {perc_ivs2}%, CID {ci1_ivs}% to {ci2_ivs}%, p{ifelse(p2_ivs<0.001,'<0.001',paste0('=',p2_ivs))})")

##Percentage comparison at high illness severity
perc_util <- overall_xg_plot_df %>% filter(Metric=="All agents"&Weight==3) %>% select(Percentage) %>% unlist()
perc_actual <- overall_xg_plot_df_px_abx %>% filter(Metric=="All agents"&Weight==3) %>% select(Percentage) %>% unlist()

##Wilcoxon test for numbers of antibiotics with coverage in teh top six
m_aut_all <- median(ur_util$n_allS_PDRx6,na.rm=T)
m_stan_all <- median(ur_util$n_allS_standard6)
m_aut_acs <- median(ur_util$n_acS_PDRx6)
m_stan_acs <- median(ur_util$n_acS_standard6)
m_aut_pos <- median(ur_util$n_poS_PDRx6)
m_stan_pos <- median(ur_util$n_poS_standard6)
m_aut_ivs <- median(ur_util$n_ivS_PDRx6)
m_stan_ivs <- median(ur_util$n_ivS_standard6)

iq1aut_all <- quantile(ur_util$n_allS_PDRx6)[2]
iq1stan_all <- quantile(ur_util$n_allS_standard6)[2]
iq1aut_acs <- quantile(ur_util$n_acS_PDRx6)[2]
iq1stan_acs <- quantile(ur_util$n_acS_standard6)[2]
iq1aut_pos <- quantile(ur_util$n_poS_PDRx6)[2]
iq1stan_pos <- quantile(ur_util$n_poS_standard6)[2]
iq1aut_ivs <- quantile(ur_util$n_ivS_PDRx6)[2]
iq1stan_ivs <- quantile(ur_util$n_ivS_standard6)[2]

iq3aut_all <- quantile(ur_util$n_allS_PDRx6)[4]
iq3stan_all <- quantile(ur_util$n_allS_standard6)[4]
iq3aut_acs <- quantile(ur_util$n_acS_PDRx6)[4]
iq3stan_acs <- quantile(ur_util$n_acS_standard6)[4]
iq3aut_pos <- quantile(ur_util$n_poS_PDRx6)[4]
iq3stan_pos <- quantile(ur_util$n_poS_standard6)[4]
iq3aut_ivs <- quantile(ur_util$n_ivS_PDRx6)[4]
iq3stan_ivs <- quantile(ur_util$n_ivS_standard6)[4]

p_acs <- round(wilcox.test(ur_util %>% pull(n_acS_PDRx6), ur_util %>% pull(n_acS_standard6), paired = TRUE, conf.int = TRUE)$p.value, 3)
p_all <- round(wilcox.test(ur_util %>% pull(n_allS_PDRx6), ur_util %>% pull(n_allS_standard6), paired = TRUE, conf.int = TRUE)$p.value, 3)
p_po <- round(wilcox.test(ur_util %>% pull(n_poS_PDRx6), ur_util %>% pull(n_poS_standard6), paired = TRUE, conf.int = TRUE)$p.value, 3)
p_iv <- round(wilcox.test(ur_util %>% pull(n_ivS_PDRx6), ur_util %>% pull(n_ivS_standard6), paired = TRUE, conf.int = TRUE)$p.value, 3)

z_access <- statistic(wilcoxsign_test(as.formula(paste0(quo_text(ur_util$n_acS_PDRx6), " ~ ", quo_text(ur_util$n_acS_standard6))), data = ur_util), "standardized")[1]
acs_effectsize <- round(z_access / sqrt(nrow(ur_util)), 3)

z_all <- statistic(wilcoxsign_test(as.formula(paste0(quo_text(ur_util$n_allS_PDRx6), " ~ ", quo_text(ur_util$n_allS_standard6))), data = ur_util), "standardized")[1]
all_effectsize <- round(z_all / sqrt(nrow(ur_util)), 3)

z_po <- statistic(wilcoxsign_test(as.formula(paste0(quo_text(ur_util$n_poS_PDRx6), " ~ ", quo_text(ur_util$n_poS_standard6))), data = ur_util), "standardized")[1]
po_effectsize <- round(z_po / sqrt(nrow(ur_util)), 3)

z_iv <- statistic(wilcoxsign_test(as.formula(paste0(quo_text(ur_util$n_ivS_PDRx6), " ~ ", quo_text(ur_util$n_ivS_standard6))), data = ur_util), "standardized")[1]
iv_effectsize <- round(z_iv / sqrt(nrow(ur_util)), 3)

wil_all <- glue("(median {m_aut_all}, interquartile range [IQR] {iq1aut_all}-{iq3aut_all} versus median {m_stan_all}, IQR {iq1stan_all}-{iq3stan_all}, p{ifelse(p_all<0.001,'<0.001',paste0('=',p_all))}, effect size [ES] {all_effectsize})")

wil_all_main <- glue("(median {m_aut_all}, IQR {iq1aut_all}-{iq3aut_all} versus median {m_stan_all}, IQR {iq1stan_all}-{iq3stan_all}, p{ifelse(p_all<0.001,'<0.001',paste0('=',p_all))}, effect size [ES] {all_effectsize})")

wil_acs <- glue("(median {m_aut_acs}, IQR {iq1aut_acs}-{iq3aut_acs} versus median {m_stan_acs}, IQR {iq1stan_acs}-{iq3stan_acs}, p{ifelse(p_acs<0.001,'<0.001',paste0('=',p_acs))}, ES {acs_effectsize})")

wil_po <- glue("(median {m_aut_pos}, IQR {iq1aut_pos}-{iq3aut_pos} versus median {m_stan_pos}, IQR {iq1stan_pos}-{iq3stan_pos}, p{ifelse(p_po<0.001,'<0.001',paste0('=',p_po))}, ES {po_effectsize})")

wil_iv <- glue("(median {m_aut_ivs}, IQR {iq1aut_ivs}-{iq3aut_ivs} versus median {m_stan_ivs}, IQR {iq1stan_ivs}-{iq3stan_ivs}, p{ifelse(p_iv<0.001,'<0.001',paste0('=',p_iv))}, ES {iv_effectsize})")

```

Alex Howard^1,2^\*, Peter L. Green^1,3,4^, Yinzheng Zhong^1,3^, David M. Hughes^5^, Alessandro Gerada^1,2^, Simon Maskell^6^, Anoop Velluva^1^, Iain E. Buchan^3,7^, William Hope^1,2^

### *corresponding author (alexander.howard@liverpool.ac.uk)

### ^1^Department of Clinical Pharmacology and Therapeutics, Institute of Systems, Molecular and Integrative Biology, William Henry Duncan Building, 6 West Derby Street, University of Liverpool, Liverpool, L7 8TX, UK; ^2^NHS University Hospitals of Liverpool Group, Mount Vernon Street, Liverpool, L7 8YE, UK; ^3^Civic Health Innovation Labs, University of Liverpool, Liverpool Science Park, 131 Mount Pleasant, Liverpool, L3 5TF, UK; ^4^Department of Mechanical and Aerospace Engineering, School of Engineering, University of Liverpool, The Quadrangle, Brownlow Hill, L69 3GH, Liverpool, UK; ^5^Department of Health Data Science, Institute of Population Health, University of Liverpool, Waterhouse Building Block B, Brownlow Street, Liverpool, L69 3GF, UK; ^6^Department of Electrical Engineering and Electronics, School of Electrical Engineering, Electronics, and Computer Science, University of Liverpool, The Quadrangle, Brownlow Hill, L69 3GH, Liverpool, UK. ^7^Department of Public Health, Policy & Systems, Institute of Population Health, University of Liverpool, Waterhouse Building Block B, Brownlow Street, Liverpool, L69 3GF, UK.


# Research in context

**Evidence before this study**

Imprecise antibiotic use is a key driver of antimicrobial resistance (AMR). The World Health Organisation (WHO) has therefore set a target for countries to reduce their use of broad-spectrum antibiotics by 2030. Meeting this target is made challenging by the tension between maximising antibiotic effectiveness in patients at high risk of poor infection outcomes and minimising harm to patients and populations from antibiotic exposure. Machine learning algorithms could be used to optimise antibiotic treatment and testing decisions using healthcare data, but these algorithms require utility functions to quantify the value of different treatment options. 

**Added value of this study**

Here, we develop and test a utility function designed for antibiotic treatment and susceptibility testing decision support systems. It calculates the value of 13 antibiotic treatment options for individual patients with urinary tract infection (UTI) by using clinical prediction models to calculate the probability of different antibiotic outcomes in individual patients, then weighting these probabilities by their importance according to a panel of expert prescribers. This approach manages the tension between antibiotic efficacy and harm by using illness severity scores to balance the need for immediate effectiveness against the risk of antibiotic harm and AMR generation. A microsimulation study using real-world prescribing and microbiology data confirmed the ability of the utility function to generate appropriate antibiotic treatment and testing recommendations for UTI. 

**Implications of all the available evidence**

The utility function we report here could underpin decision support tools that leverage data, machine learning, and domain expertise to help clinicians, healthcare providers, and countries reduce medium- and long-term antibiotic harm to individuals and populations without compromising treatment efficacy. Further clinical studies with utility function-based antibiotic decision support tools are required across a range of populations and care contexts to better understand their impact on individual and population outcomes. 

# Abstract

## Background

To optimise antibiotic treatment using decision support tools, developers need to quantify the utility of different treatment options. Here, we report an antibiotic utility function (AUF) that recommends antibiotic treatments and susceptibility tests for urinary tract infection by combining machine learning predictions and prescriber knowledge.  

## Methods

The AUF retrospectively recommended personalised treatment choices and six-antibiotic susceptibility testing panels for `r nrow(ur_util) %>% comma()` patients using healthcare data available when urine cultures were sent. The appropriateness of testing and treatment recommendations were compared to human prescriber treatment choices and a standard testing panel respectively using subsequent urine antibiotic susceptibility results, measuring proportions of appropriate recommendations that were World Health Organisation Access category, oral, and/or intravenous antibiotics.

## Findings

Urine culture isolates were more frequently susceptible to AUF antibiotic choices than human antibiotic choices `r chi_all`. The AUF chose more appropriate Access  `r chi_acs` and oral antibiotics `r chi_orals` than human prescribers, but fewer appropriate intravenous antibiotics `r chi_ivs`. The AUF testing panel provided more susceptible results per specimen than the standard panel `r wil_all`, including more Access `r wil_acs` and intravenous antibiotics `r wil_iv` but fewer oral antibiotics `r wil_po`.

## Interpretation

The AUF described here could improve antibiotic treatment appropriateness by balancing risks of antibiotic failure against harm. AUF-based decision support tools need evaluating in different settings/populations.

## Funding

Wellcome Trust grant 226691/Z/22/Z and Office for Life Sciences Data-Action Accelerator.

# Introduction

Antimicrobial resistance (AMR) is a threat to delivering effective healthcare worldwide.[@walshAntimicrobialResistanceAddressing2023] The United Nations General Assembly (UNGA) recently committed to prioritising global use of antibiotics that are less likely to generate AMR (World Health Organisation \[WHO\] Access Category).[@un2024_amr] Determining when to use Access antibiotics is challenging — they often have a narrower spectrum of microbiological activity, which may promote use of Watch category antibiotics to maximise the probability of a clinical response, particularly when there is uncertainty over the likelihood of resistance and/or there are severe consequences of treatment failure such as sepsis.[@howardPersonalisedAntimicrobialSusceptibility2024, @rheeTrendsEmpiricBroadSpectrum2024]

Machine learning models could help maximise the appropriate use of Access antibiotics by using drug, patient, and pathogen characteristics to predict AMR and treatment outcomes.[@corbinPersonalizedAntibiogramsMachine2022] Turning individual predictions into holistic prescribing and testing decisions requires a utility function, which is an equation that weights and combines outcome predictions to quantify the overall value of any given antibiotic treatment option.[@staderAlgorithmsDontHave2024,@walshUtilityFunctionsAutonomic2004] Clinical decision support systems based on a utility function may give prescribers the evidence needed to use a more appropriate antibiotic than they would otherwise have chosen.

Here, we describe the development of an antibiotic utility function (AUF) that guides antibiotic treatment choices for urinary tract infection (UTI) by combining algorithmic predictions with real-world prescriber domain knowledge and an illness severity score. The aim of this simulation study was to assess the potential of the AUF approach to improve the appropriateness of antibiotic treatment and susceptibility testing decisions using retrospective real-world healthcare data.

# Methods

## Ethics

The study complied with the PhysioNet MIMIC-IV (Medical Information Mart for Intensive Care) dataset Data Use Agreement 1.5.0. A UK Research Ethics Committee (IRAS 330186) application process determined that ethics committee review was not required.\

## Data sources and processing

The study used four datasets:

1.  Urine culture data to train models to predict the antibiotic susceptibility of patients' urine culture isolates using their prior healthcare data.
2.  Antibiotic prescription data to train models to predict probability of *Clostridioides difficile* infection (CDI) and drug toxicity following antibiotic treatment.
3.  Another set of urine culture data from Emergency Department (ED) patients to perform a microsimulation study comparing AUF antibiotic recommendations against antibiotics prescribed by human clinicians in the retrospective data.
4.  Antibiotic ranking data from clinicians who participated in a discrete choice experiment (a UTI antibiotic ranking exercise).

The clinical prediction models and the microsimulation study used data from PhysioNet MIMIC-IV version 2.2, which is an open-source, pseudonymised electronic healthcare record dataset for inpatients and outpatients over the age of 18 admitted to Beth Israel Deaconess Medical Center (Boston, MA) intensive care (ICU) or ED between 2008 and 2019 (<https://physionet.org/content/mimiciv/2.2/>).[@johnsonMIMICIVClinicalDatabase, @johnsonMIMICIVFreelyAccessible2023b, @goldbergerPhysioBankPhysioToolkitPhysioNet2000b] Data preprocessing and quality checking (Appendix 1) were performed using R v4.3.2 (2023-10-31) in a similar way to our recent work.[@howardPersonalisedAntimicrobialSusceptibility2024, @rstudioref]

Following preprocessing, prescribing and urine culture susceptibility data were available for 13 antibiotics (ampicillin, ampicillin-sulbactam, piperacillin-tazobactam, cefazolin, ceftriaxone, cefepime, meropenem, ciprofloxacin, gentamicin, trimethoprim-sulfamethoxazole, nitrofurantoin, and vancomycin).[@patelUpdatingBreakpointsUnited2023] Clinical prediction models were developed for both these individual agents and common two-agent combinations (e.g., piperacillin-tazobactam and vancomycin administered together), but for simplicity and to limit computation time, the final results reported in this paper are only for single-agent treatments. The size of the dataset was deemed to have sufficient case-variable ratio to minimise the risk of overfitting.[@bramerAvoidingOverfittingDecision2007] Data for the microsimulation study consisted of positive urine cultures from ED patients that were taken on the same day that they were triaged and received at least one of the 13 antibiotics listed above. Illness severity was an 'acuity' variable ranging from four (mild) to one (severe) - this was converted to a zero (mild) to three (severe) scale to facilitate the AUF's safety mechanism (see below).

Antibiotic cost was determined using each drug's lowest U.S. Department of Veterans Affairs National Acquisition Center procurement price (November 2024) — U.S. dollar values were divided by the highest value (including two-antibiotic combinations) to produce normalised numbers between zero and one.[@supportVANationalAcquisition]

The discrete choice experiment consisted of a UTI antibiotic ranking exercise (Appendix 2) that was conducted online (<https://www.surveymonkey.com>) between 1st June and October 31st 2024 by UK-based clinicians in general practice (GP), medicine, surgery, ICU, and infectious diseases/medical microbiology (ID/MM), recruited via organisational and departmental email single points of contact. There was no formal sample size calculation — the primary aim was to have at least one representative of each specialty. Participants ranked a set of fictional antibiotics in order of their suitability for managing UTI in their usual clinical setting based on drug characteristics. The set of options was limited to 13 antibiotics with six characteristics (WHO Access/Watch/Reserve \[AWaRe\] class, CDI risk, toxicity, UTI-specificity, oral and IV routes of administration) to minimise the time taken for participants to complete the exercise.[@buddAdaptationWHOEssential2019]\

## Utility function

Our AUF is an equation that calculates the utility/usefulness, $U$, for each antibiotic option in each patient by incorporating the characteristics and consequences of antibiotic treatments, the importance of those characteristics/consequences, and a safety mechanism for patients with severe infection. The characteristics and consequences are chosen to reflect individual (e.g., drug toxicity) and population (e.g., AWaRe class) considerations. By design, the minimum possible value of $U$ is zero because the AUF is used to choose between antibiotics rather than decide whether to treat (in which case negative utility would mean that risks of treatment outweigh benefits). We propose that $U$ for antibiotic $x$ in patient $n$ is is defined as\

$$
U^{(x,n)} = p_s^{(x,n)}\left(O^{(x,n)}+C^{(x)}+S^{(x,n)}\right)
$$ {#eq-utility}\

where $p_s^{(x,n)}$ is the probability of the patient's urinary pathogen being susceptible to antibiotic $x$, and where $O^{(x,n)}$, $C^{(x)}$, and $S^{(x,n)}$ relate to the predicted outcomes of antibiotic treatment, antibiotic characteristics, and the safety mechanism respectively. We note that $C$ does not depend on $n$ (patient characteristics) because it is defined solely by antibiotic characteristics. If $p_s^{(x,n)}=0$, then $U^{(x,n)}=0$, i.e., the utility of antibiotic $x$ is zero if the probability of the patient's urinary pathogen being susceptible to that antibiotic is zero. In the other extreme case, i.e., $p_s^{(x,n)}=1$, variation in $U^{(x,n)}$ is determined entirely by variation in $O^{(x,n)}$, $C^{(x)}$, and/or $S^{(x,n)}$. Before defining $O^{(x,n)}$, $C^{(x,n)}$, and $S^{(x,n)}$, we must define the function\

$$
u(w, k) = 
\begin{cases}
    wk & \text{if } w \geq 0 \\
    |w|(1-k) & \text{otherwise} \
\end{cases}
$$ {#eq-ufunction}\

where $k$ are either known antibiotic characteristics or outcome probabilities (estimated using machine learning clinical prediction models — see Appendix 3). Weights, $w$, represent the importance of antibiotic characteristics and outcomes to prescribers, which are derived from the contribution of such factors to antibiotic choice in the discrete choice experiment (Appendix 4). If $w$ is negative, (i.e., an outcome or characteristic that was undesirable to prescribers in the discrete choice experiment), an increase in $k$ reduces the value of $u(w,k)$, and vice versa (Appendix 5).

The utility of the predicted antibiotic outcomes, $O^{(x,n)}$, is defined as\

$$
O^{(x,n)} = u(w_c, p_c^{(x,n)}) + u(w_t, p_t^{(x,n)})
$$ {#eq-probability}\

where $p_c^{(x,n)}$ and $p_t^{(x,n)}$ are the patient's estimated probability of CDI and toxicity following antibiotic treatment respectively (the definitions of these are in Appendix 3), and $w_c^{(x)}$ and $w_t^{(x)}$ are the respective importance weights from the prescriber discrete choice experiment.

The utility of known antibiotic characteristics, $C^{(x)}$, is\

$$
C^{(x)}=u(w_u,v_u^{(x)})+u(w_a,v_a^{(x)})+u(w_o,v_o^{(x)})+u(w_r,v_r^{(x)})+u(w_h,v_h^{(x)})
$$ {#eq-characteristics}\

where $v_u^{(x)}$, $v_a^{(x)}$, $v_o^{(x)}$, and $v_r^{(x)}$ are one or zero to represent the presence or absence of UTI-specificity, Access category, oral administration option, and Reserve category respectively, $v_h^{(x)}$ is normalised financial cost, and $w_u^{(x)}$, $w_a^{(x)}$, $w_o^{(x)}$, $w_r^{(x)}$, and $w_h^{(x)}$ are the respective importance weights from the prescriber discrete choice experiment.

The safety mechanism for patients with severe infection, $S^{(x,n)}$, is\

$$
S^{(x,n)}= u(w_i,v_i^{(x)})b\text{ exp}(a^{(n)})
$$ {#eq-safety}\

where $v_i^{(x)}$ is zero or one to represent the presence or absence of an intravenous administration option, $w_i^{(x)}$ is the respective importance weight from the discrete choice experiment, $a^{(n)}$ is an illness severity score chosen by the user (e.g., National Early Warning Score \[NEWS\]), and $b$ enables the user to calibrate to the scale of the chosen score (for example, NEWS ranges from 0-20 while APACHE-2 ranges from 0 to 71). The default $b=1$ was used in this study. The minimum illness severity score observed in a population must be zero. As illness severity score increases, patients are more likely to have severe infection (e.g., sepsis), in which case efficacy should be prioritised — increasing $a$ therefore exponentially increases the relative value of intravenous treatment $u(w_i,v_i^{(x)})$ and the antibiotic being active against the urinary pathogen $p_s^{(x,n)}$ (reflecting an exponential increase in the importance of consequences between full recovery and death). [@buckmanEmpiricAntibioticsSepsis2018]
\

## Microsimulation study

An individual-level simulation (microsimulation) study evaluated the appropriateness of empirical AUF treatment and testing decisions using retrospective real-world data.[@DynamicMicrosimulationModels] Each patient who had a urine specimen sent from the ED had utility values calculated for all 13 antibiotics, which were then used to rank the antibiotics — the highest-ranked antibiotic became that patient's simulated UTI treatment recommendation, and the top six antibiotics became their simulated antimicrobial susceptibility testing panel. The two outcomes of interest were:

1. The appropriateness of AUF treatment decisions, compared to human prescriber decisions — this was measured by the proportion of instances in which a urine culture isolate was susceptible to the chosen empirical antibiotic treatment, and the proportion of instances in which these were WHO Access category, orally-administrable, and intravenously-administrable (differences assessed by chi-squared test with 5% significance threshold). The way recommendations changed in response to increasing illness severity was assessed by bar plots.
2. The appropriateness of AUF antimicrobial susceptibility testing decisions, compared to an international guideline-based standard panel (nitrofurantoin, trimethoprim-sulfamethoxazole, gentamicin, piperacillin-tazobactam, ceftriaxone, and ciprofloxacin) used in our previous work in personalised antimicrobial susceptibility testing — this was measured by the number of susceptible results per testing panel, and the number of these results that were for WHO Access category, orally-administrable, and intravenously-administrable antibiotics (differences assessed using a Wilcoxon signed ranks test with 5% significance threshold and effect size [test Z statistic divided by the square root of the total number of specimens]).[@howardPersonalisedAntimicrobialSusceptibility2024, @EAUGuidelinesUrologicala, @WHOAWaReAccess].

# Results

## Participants

Characteristics of the MIMIC-IV urine culture and prescription datasets are summarised in Appendix 6. Most urine specimens were obtained from females (`r urt(desc_tab,"F")`), and older patients (most represented decile 70-79 [`r urt(desc_tab,"70-79")`]). Illness severity scores of one or two were commonest in the microsimulation dataset — 2.9% (n=10) scored zero and 10.3% (n=35) scored three. Most prescriptions were for older patients (most represented decile 60-69 [`r abt(desc_tab,"60-69")`]). The three most commonly prescribed antibiotics (Appendix 7) were `r abt2(ab_tab,1)`, `r abt2(ab_tab,2)`, and `r abt2(ab_tab,3)`. Forty-nine UK-based prescribers completed the discrete choice experiment (15 ID/MM, 11 haemato-oncology/respiratory medicine/acute medicine, nine urology/general surgery, nine ICU, five GP). Mean completion time was nine minutes, 12 seconds.\

## Utility function

Clinical prediction model training hyperparameters and predictor variable contributions are summarised in Appendixes 8 and 9 respectively. Sex, age, and previous AMR were large contributors to predicting the antibiotic susceptibility of urine pathogens. Age and previous hospital admission were large contributors to predicting CDI and antibiotic toxicity. Validation performance metrics and receiver operating characteristic (ROC) curves for the 15 clinical prediction models (one predicting susceptibility to each antimicrobial agent, one CDI, and one drug toxicity) are summarised in Table 1 and Appendix 9 respectively, with respective calibration curves displayed in Appendix 10. Eight models produced areas under ROC (AUROCs) between 0.7 and 0.8, five between 0.65 and 0.7. The CDI model had the highest AUROC, at `r aucfilter(metrics_singles_table,"CDI",TRUE)`, and the model predicting the ampicillin susceptibility of urine pathogens had the lowest, at `r aucfilter(metrics_singles_table,"Ampicillin")`.
\

```{r, echo=FALSE,message=FALSE,warning=FALSE}

metrics_singles_table <- read_csv("/Users/alexhoward/Documents/Projects/UDAST_code/metrics_singles_table.csv")

knitr::kable(metrics_singles_table)

```
### Table 1: Model performance metrics at for prediction of single-antibiotic susceptibility, CDI, and antibiotic toxicity in the single validation run on the validation dataset (decision threshold 0.5 where applicable). 95% confidence intervals are displayed in parentheses.
\
When model stability was assessed by progressively decreasing training dataset size (Appendix 11), the CDI model had the largest difference in mean AUROC across six random train-test splits (0.776 with 14% training:86% testing, versus 0.667 with 2% training:98% testing). The vancomycin susceptibility prediction model had the largest AUROC standard deviation (0.025 with 2% training:98% testing). When models were tested out-of-sample by training on data from one time period and testing on data from other time periods (Appendix 13), the CDI prediction model had the largest difference in mean AUROC between training and testing time groups (0.897 with 2011-2013 training:2017-2019 testing versus 0.761 with 2014-2016 training:2014-2016 testing) and the largest AUROC standard deviation (0.078 with 2014-2016 training:2017-2019 testing). When model fairness was assessed by measuring predictive performance in different demographic groups (Appendix 14), the largest differences in mean AUROC were observed when predicting the antibiotic susceptibility of urine culture isolates for different age groups (0.826 for piperacillin-tazobactam in 40-49s versus 0.632 in 30-39s), races (0.716 for ciprofloxacin in Hispanic patients versus 0.623 in the aggregated least prevalent races), and sexes (0.725 for meropenem in females versus 0.603 in males). The largest AUROC standard deviations were observed between ages, races, and sexes when predicting piperacillin-tazobactam susceptibility (0.113 in 30-39s, 0.089 in Asian patients, 0.022 in males).

The relative influences of different antibiotic characteristics on prescriber antibiotic choices in the discrete choice experiment are displayed in Figure 3 (individual specialty results are displayed in Appendix 15). UTI-specificity and toxicity had the largest positive and negative weight respectively when participants selected antibiotics. High antibiotic cost had the least influence on the probability of antibiotic selection. GPs and ID/MM specialists were more likely to select oral than intravenous antibiotics. ICU and medical specialists were more likely to select intravenous than oral antibiotics and most likely to select Access antibiotics. ICU specialists were least likely to select Reserve antibiotics. Wide confidence intervals in the GP sub-analysis (Appendix 12) reflected low respondent numbers (n=5).\

```{r, echo=FALSE,message=FALSE,warning=FALSE}

knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/ORplot.pdf")

```

### Figure 1: Coefficients from the ranked logit analysis of the discrete choice experiment across all prescriber specialties. Bar colour represents whether the characteristic increased (green) or decreased (red) the probability of antibiotic selection, and therefore how that characteristic was subsequently weighted in the antimicrobial utility function (AUF). Error bars represent 95% confidence intervals.
\

## Microsimulation study

The distributions of antibiotic utility values for patients across the microsimulation dataset overall and by speciality subtype are displayed in Figure 2 and Appendix 16 respectively. Nitrofurantoin had the highest median utility across the population (`r utilsum(util_probs_df,1,"median",TRUE)`), and vancomycin the lowest (`r utilsum(util_probs_df,13,"median")`). Cefazolin had the widest utility spread (IQR width `r utilsum(util_probs_df,1,"IQR")`), reflecting variation in probability of urine isolate susceptibility to cefazolin in the dataset (IQR width `r round(wideiqr,3)`).\

```{r, echo=FALSE,message=FALSE,warning=FALSE}
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/utility_Treatment_ (single agent).pdf")
```
### Figure 2: Distributions of antibiotic utility values for patients across the microsimulation dataset. The central line represents the median, the box the interquartile range, the whiskers 1.5 times the interquartile range beyond quartiles one and three, and the dots outliers.
\

Urine culture isolates were susceptible to the antibiotics chosen by the AUF algorithm more often than they were susceptible to antibiotics chosen by human prescribers in the ED `r chi_all` — more of these appropriate AUF treatment choices were WHO Access category `r chi_acs` and orally-administrable `r chi_orals` than human prescriber choices, but fewer were intravenously administrable `r chi_ivs`.

Figures 3 and 4 display how illness severity influenced the appropriateness and types of antibiotics chosen by the AUF and human prescribers in the ED. The AUF behaved in a similar way to human prescribers, in that it predominantly chose orally-administrable WHO Access antibiotics for the most systemically well patients (mainly nitrofurantoin) and intravenously-administrable WHO Watch antibiotics for the most systemically unwell patients (mainly piperacillin-tazobactam for the AUF and piperacillin-tazobactam plus vancomycin for human prescribers). The AUF, however, detected more opportunities to use appropriate oral and Access antibiotics in patients with intermediate illness severity and appropriate intravenous Access antibiotics in patients with high illness severity, while achieving higher rates of urinary pathogen coverage than human prescribers — it did this by making more use of nitrofurantoin, gentamicin, and piperacillin-tazobactam, and avoiding the use of ceftriaxone.\

```{r, echo=FALSE,message=FALSE,warning=FALSE}
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/bar_AWaRe category.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/bar_Oral administrability.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/bar_IV administrability.pdf")
```
### Figure 3: Plots comparing how increasing illness severity affected the concordance of empirical treatment choices made by the antimicrobial utility function (AUF) and human prescribers with urine susceptibility results, by WHO Access/Watch/Reserve (AWaRe) category (top), availability of an oral option (middle), and availability of an IV option (bottom).
\
```{r, echo=FALSE,message=FALSE,warning=FALSE}
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot.pdf")
knitr::include_graphics("/Users/alexhoward/Documents/Projects/UDAST_code/illness_abplot_px_abx.pdf")

```
### Figure 4: The make-up of antimicrobial utility function (AUF) first-line treatment recommendations by antibiotic agent depending on illness severity. The top plot is for AUF recommendations, the bottom plot for antibiotics that were actually prescribed.
\

The antimicrobial susceptibility testing panel composed of the top six algorithmic choices (Appendix 17) provided more susceptible results per specimen than the standard panel `r wil_all`, including more Access `r wil_acs` and intravenous antibiotics `r wil_iv` but fewer oral antibiotics `r wil_po`.

# Discussion

This study indicates that decision support systems based on the antimicrobial utility function (AUF) described here could help address AMR by improving the appropriateness of empirical antibiotic prescribing and susceptibility testing for UTI. Human prescribers understand the importance of different antibiotic outcomes better than algorithms, but are less good at estimating the probability of these outcomes — our algorithmic approach addresses this problem by combining human judgement (quantitative analysis of the discrete choice experiment) with data-driven probability predictions (machine learning).[@Li2020] The AUF also manages the tension between the need for individual patient treatment efficacy and the risk of patient harm / the protection of antibiotics as societal assets using a safety mechanism — as illness severity increases, the algorithm recommends more intravenous and Watch category agents to maximise the probability of efficacy. Our results demonstrate that this approach could increase the appropriate use of WHO Access category agents. Implementing decision support systems based on the AUF could therefore help countries meet the UN General Assembly target of 70% Access category antibiotic use by 2030.

The results of our prescriber discrete choice experiment demonstrate that different clinicians have different priorities that reflect the needs of their different patient cohorts. Similar heterogeneity is likely to arise from differences between different healthcare settings (e.g., high versus low- and middle-income). The AUF is constructed to allow for specialist groups and different health systems to have their own locally-adapted AUF via two mechanisms: firstly, the discrete choice experiment can be undertaken by clinicians in the area it is to be used, ensuring importance weights $w$ are appropriate to the local setting; and secondly, the safety mechanism can be calibrated to the local illness severity score of choice (e.g., APACHE-2 in ICU instead of NEWS). The recommendations could also account for antibiotic allergies and contraindications (not done in this study due to a lack of allergy information). Digital infrastructure may be a barrier to personalised recommendations in low- and middle-income countries, but not to population and policy-level decisions (e.g., antibiotic formularies and supply chains).

Robust, scalable implementation of decision support tools based on the AUF will require three key enablers: 1) local dataflows will need to be complete and timely enough to inform clinical prediction models at individual (if available) or population level, depending on the application; 2) a local hub will be required for the delivery, maintenance, and performance monitoring of decision support to clinicians — we propose that diagnostic microbiology laboratories could form these hubs, given that they usually contain infection domain experts and the infrastructure to communicate results to clinicians; and 3) regulations concerning clinical decision support tools will need to allow algorithms to adapt to local populations — one of the main benefits of our AUF is its ability to adapt to the priorities and needs of local clinicians and patients.

Our study has several limitations: firstly, the urine dataset was limited to secondary care patients, the prescription dataset to inpatients, and the microsimulation dataset to ED patients — the approach needs to be validated in primary care where most antibiotic prescriptions occur; secondly, we have not examined potential outcomes where organisms are not grown in urinary specimens, and there were insufficient antibiotic contraindication data to detect barriers to recommendations; thirdly, there were few GP respondents in the discrete choice experiment — further work is required to understand how best to engage busy clinicians in generating these vital qualitative and quantitative data; fourthly, the AUF cannot detect scenarios in which risks of treatment outweigh benefits (i.e., negative utility) — however, the universally low vancomycin utility rankings in this study (see Figure 4) show that it can inform decisions to avoid less suitable antibiotics where plausible alternatives are available.

Despite these limitations, our study demonstrates how an AUF that quantifies the key considerations of antibiotic prescribing decisions (namely the probability and importance of different outcomes, and the consequences of ineffective treatment) could improve the appropriateness of antibiotic prescribing through appropriate prioritisation of Access and oral antibiotics. Most importantly, it does this in a way that preserves clinical efficacy where it matters most — in severely ill patients at high risk of deterioration from sepsis. Further studies of this approach are needed across a diversity of populations and care settings to better understand the impact of AUF-based antibiotic decision support on individual and population outcomes.\

# Funding

This research was funded in part by the Wellcome Trust grant ref: 226691/Z/22/Z. For the purpose of open access, the author has applied a CC BY public copyright licence to any Author Accepted Manuscript version arising from this submission. Office for Life Sciences Data-Action Accelerator award also supported this work. The funders had no role in the conceptualisation, design, data collection, analysis, decision to publish or preparation of the manuscript.\

# Conflicts of interest

Alex Howard declares personal consulting work for Pfizer outside the submitted work, and a donation from Pfizer to the University of Liverpool for a public and professional engagement project outside the submitted work. Iain Buchan declares consulting fees via University of Liverpool from AstraZeneca outside the submitted work. William Hope holds or has recently held research grants with UKRI, EU (FP7, IMI-1, IMI-2), Wellcome, F2G, Spero Therapeutics, Antabio, Pfizer, Allecra, Bugworks, Phico Therapeutics, BioVersys, Global Antimicrobial Research and Development Partnership (GARDP). He is (or has recently been) a consultant for Appili Therapeutics, F2G, Spero Therapeutics, Pfizer, GSK, Phico Therapeutics, Pulmocide, and Mundipharma Research Ltd. He was a member of the Specialist Advisory Committee for GARDP (2020-2023), a member of the British Society for Antimicrobial Chemotherapy (BSAC) Breakpoint Committee (2020-2023), a member of Health Technology Appraisal (HTA) Prioritisation Committee for hospital care and was the Specialty National Co-lead for Infection for the National Institute of Health Research (NIHR) (2020-2024). The other authors declare no competing interests.\

# Data sharing

The MIMIC-IV version 2.2 data set is publicly accessible as a credentialed PhysioNet user at https://physionet.org/content/mimiciv/2.2/ once mandated training is completed, and the data use agreement is signed. Additional aggregate-level data can be provided by the authors if requests to do so are in line with legal and ethical data use regulations.\

# Code sharing

Open-source code to reproduce the study using the above dataset is available at <https://github.com/amh312/Antimicrobial_utility>.\

## Contributions

AH conceived the utility function and associated study, developed the utility function, performed data engineering and mathematical modelling, and wrote the manuscript including diagrams. PG provided edits and suggestions for the utility function design, mathematical notation, and manuscript. AG, YZ, DH, AV, SM, and IB provided edits and suggestions for the manuscript. WH provided feedback and support on initial utility function and study design, and edits and suggestions on the manuscript.\

## Acknowledgements

We would like to thank the healthcare professionals who participated in the discrete choice experiment. Generative AI tools (ChatGPT, Gemini via Google search) were used for web searches in preparatory research work on coding tasks — all search results were checked for accuracy.\

# References

::: {#refs}
:::
\





